[[package]]
name = "aiofiles"
version = "24.1.0"
description = "File support for asyncio."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "aiohappyeyeballs"
version = "2.6.1"
description = "Happy Eyeballs for asyncio"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "aiohttp"
version = "3.11.14"
description = "Async http client/server framework (asyncio)"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
aiohappyeyeballs = ">=2.3.0"
aiosignal = ">=1.1.2"
async-timeout = {version = ">=4.0,<6.0", markers = "python_version < \"3.11\""}
attrs = ">=17.3.0"
frozenlist = ">=1.1.1"
multidict = ">=4.5,<7.0"
propcache = ">=0.2.0"
yarl = ">=1.17.0,<2.0"

[package.extras]
speedups = ["aiodns (>=3.2.0)", "brotli", "brotlicffi"]

[[package]]
name = "aiosignal"
version = "1.3.2"
description = "aiosignal: a list of registered asynchronous callbacks"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
frozenlist = ">=1.1.0"

[[package]]
name = "aiosqlite"
version = "0.21.0"
description = "asyncio bridge to the standard sqlite3 module"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
typing_extensions = ">=4.0"

[package.extras]
dev = ["attribution (==1.7.1)", "black (==24.3.0)", "build (>=1.2)", "coverage[toml] (==7.6.10)", "flake8 (==7.0.0)", "flake8-bugbear (==24.12.12)", "flit (==3.10.1)", "mypy (==1.14.1)", "ufmt (==2.5.1)", "usort (==1.0.8.post1)"]
docs = ["sphinx (==8.1.3)", "sphinx-mdinclude (==0.6.1)"]

[[package]]
name = "alembic"
version = "1.15.1"
description = "A database migration tool for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
Mako = "*"
SQLAlchemy = ">=1.4.0"
typing-extensions = ">=4.12"

[package.extras]
tz = ["tzdata"]

[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "anyio"
version = "4.9.0"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
exceptiongroup = {version = ">=1.0.2", markers = "python_version < \"3.11\""}
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.26.1)"]
test = ["anyio", "blockbuster (>=1.5.23)", "coverage[toml] (>=7)", "exceptiongroup (>=1.2.0)", "hypothesis (>=4.0)", "psutil (>=5.9)", "pytest (>=7.0)", "trustme", "truststore (>=0.9.1)", "uvloop (>=0.21)"]
doc = ["packaging", "Sphinx (>=8.2,<9.0)", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]

[[package]]
name = "apache-airflow"
version = "2.10.4"
description = "Programmatically author, schedule and monitor data pipelines"
category = "main"
optional = false
python-versions = "<3.13,>=3.8.1"

[package.dependencies]
alembic = ">=1.13.1,<2.0"
apache-airflow-providers-common-compat = "*"
apache-airflow-providers-common-io = "*"
apache-airflow-providers-common-sql = "*"
apache-airflow-providers-fab = ">=1.0.2"
apache-airflow-providers-ftp = "*"
apache-airflow-providers-http = "*"
apache-airflow-providers-imap = "*"
apache-airflow-providers-smtp = "*"
apache-airflow-providers-sqlite = "*"
argcomplete = ">=1.10"
asgiref = ">=2.3.0"
attrs = ">=22.1.0"
blinker = ">=1.6.2"
colorlog = ">=6.8.2"
configupdater = ">=3.1.1"
connexion = {version = ">=2.14.2,<3.0", extras = ["flask"]}
cron-descriptor = ">=1.2.24"
croniter = ">=2.0.2"
cryptography = ">=41.0.0"
deprecated = ">=1.2.13"
dill = ">=0.2.2"
flask = ">=2.2.1,<2.3"
flask-caching = ">=2.0.0"
flask-session = ">=0.4.0,<0.6"
flask-wtf = ">=1.1.0"
fsspec = ">=2023.10.0"
google-re2 = {version = ">=1.0", markers = "python_version < \"3.12\""}
gunicorn = ">=20.1.0"
httpx = ">=0.25.0"
importlib_metadata = {version = ">=6.5", markers = "python_version < \"3.12\""}
itsdangerous = ">=2.0"
jinja2 = ">=3.0.0"
jsonschema = ">=4.18.0"
lazy-object-proxy = ">=1.2.0"
linkify-it-py = ">=2.0.0"
lockfile = ">=0.12.2"
markdown-it-py = ">=2.1.0"
markupsafe = ">=1.1.1"
marshmallow-oneofschema = ">=2.0.1"
mdit-py-plugins = ">=0.3.0"
methodtools = ">=0.4.7"
opentelemetry-api = ">=1.24.0"
opentelemetry-exporter-otlp = ">=1.24.0"
packaging = ">=23.0"
pathspec = ">=0.9.0"
pendulum = {version = ">=2.1.2,<4.0", markers = "python_version < \"3.12\""}
pluggy = ">=1.5.0"
psutil = ">=5.8.0"
pygments = ">=2.0.1"
pyjwt = ">=2.0.0"
python-daemon = ">=3.0.0"
python-dateutil = ">=2.7.0"
python-nvd3 = ">=0.15.0"
python-slugify = ">=5.0"
requests = ">=2.27.0,<3"
requests-toolbelt = ">=0.4.0"
rfc3339-validator = ">=0.1.4"
rich = ">=12.4.4"
rich-argparse = ">=1.0.0"
setproctitle = ">=1.3.3"
sqlalchemy = ">=1.4.36,<2.0"
sqlalchemy-jsonfield = ">=1.0"
tabulate = ">=0.7.5"
tenacity = ">=8.0.0,<8.2.0 || >8.2.0"
termcolor = ">=1.1.0"
universal-pathlib = ">=0.2.2,<0.2.4 || >0.2.4"
werkzeug = ">=2.0,<3"

[package.extras]
aiobotocore = ["aiobotocore (>=2.9.0)"]
async = ["eventlet (>=0.33.3)", "gevent (>=0.13)", "greenlet (>=0.4.9)"]
apache-atlas = ["atlasclient (>=0.1.2)"]
apache-webhdfs = ["hdfs[dataframe,kerberos,avro] (>=2.0.4)"]
cgroups = ["cgroupspy (>=0.2.2)"]
cloudpickle = ["cloudpickle"]
deprecated-api = ["requests (>=2.27.0,<3)"]
github-enterprise = ["apache-airflow", "authlib (>=1.0.0)"]
google-auth = ["apache-airflow", "authlib (>=1.0.0)"]
graphviz = ["graphviz (>=0.12)"]
kerberos = ["pykerberos (>=1.1.13)", "requests-kerberos (>=0.10.0)", "thrift-sasl (>=0.2.0)"]
ldap = ["ldap3 (>=2.5.1)", "python-ldap"]
leveldb = ["plyvel (>=1.5.1)"]
otel = ["opentelemetry-exporter-prometheus"]
pandas = ["pandas (>=1.2.5,<2.2)"]
password = ["bcrypt (>=2.0.0)", "flask-bcrypt (>=0.7.1)"]
pydantic = ["pydantic (>=2.3.0)"]
rabbitmq = ["amqp"]
s3fs = ["s3fs (>=2023.10.0)"]
saml = ["python3-saml (>=1.16.0)"]
sentry = ["blinker (>=1.1)", "sentry-sdk (>=1.32.0,!=1.33.0)"]
statsd = ["statsd (>=3.3.0)"]
uv = ["uv (>=0.1.32)"]
virtualenv = ["virtualenv"]
all-dbs = ["apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow"]
atlas = ["apache-airflow"]
aws = ["apache-airflow"]
azure = ["apache-airflow"]
cassandra = ["apache-airflow"]
druid = ["apache-airflow"]
gcp = ["apache-airflow"]
gcp-api = ["apache-airflow"]
hdfs = ["apache-airflow"]
hive = ["apache-airflow"]
kubernetes = ["apache-airflow"]
mssql = ["apache-airflow"]
pinot = ["apache-airflow"]
s3 = ["apache-airflow"]
spark = ["apache-airflow"]
webhdfs = ["apache-airflow"]
winrm = ["apache-airflow"]
airbyte = ["apache-airflow-providers-airbyte"]
alibaba = ["apache-airflow-providers-alibaba"]
amazon = ["apache-airflow-providers-amazon"]
apache-beam = ["apache-airflow-providers-apache-beam"]
apache-cassandra = ["apache-airflow-providers-apache-cassandra"]
apache-drill = ["apache-airflow-providers-apache-drill"]
apache-druid = ["apache-airflow-providers-apache-druid"]
apache-flink = ["apache-airflow-providers-apache-flink"]
apache-hdfs = ["apache-airflow-providers-apache-hdfs"]
apache-hive = ["apache-airflow-providers-apache-hive"]
apache-iceberg = ["apache-airflow-providers-apache-iceberg"]
apache-impala = ["apache-airflow-providers-apache-impala"]
apache-kafka = ["apache-airflow-providers-apache-kafka"]
apache-kylin = ["apache-airflow-providers-apache-kylin"]
apache-livy = ["apache-airflow-providers-apache-livy"]
apache-pig = ["apache-airflow-providers-apache-pig"]
apache-pinot = ["apache-airflow-providers-apache-pinot"]
apache-spark = ["apache-airflow-providers-apache-spark"]
apprise = ["apache-airflow-providers-apprise"]
arangodb = ["apache-airflow-providers-arangodb"]
asana = ["apache-airflow-providers-asana"]
atlassian-jira = ["apache-airflow-providers-atlassian-jira"]
celery = ["apache-airflow-providers-celery"]
cloudant = ["apache-airflow-providers-cloudant"]
cncf-kubernetes = ["apache-airflow-providers-cncf-kubernetes"]
cohere = ["apache-airflow-providers-cohere"]
common-compat = ["apache-airflow-providers-common-compat"]
common-io = ["apache-airflow-providers-common-io"]
common-sql = ["apache-airflow-providers-common-sql"]
databricks = ["apache-airflow-providers-databricks"]
datadog = ["apache-airflow-providers-datadog"]
dbt-cloud = ["apache-airflow-providers-dbt-cloud"]
dingding = ["apache-airflow-providers-dingding"]
discord = ["apache-airflow-providers-discord"]
docker = ["apache-airflow-providers-docker"]
elasticsearch = ["apache-airflow-providers-elasticsearch"]
exasol = ["apache-airflow-providers-exasol"]
fab = ["apache-airflow-providers-fab"]
facebook = ["apache-airflow-providers-facebook"]
ftp = ["apache-airflow-providers-ftp"]
github = ["apache-airflow-providers-github"]
google = ["apache-airflow-providers-google"]
grpc = ["apache-airflow-providers-grpc"]
hashicorp = ["apache-airflow-providers-hashicorp"]
http = ["apache-airflow-providers-http"]
imap = ["apache-airflow-providers-imap"]
influxdb = ["apache-airflow-providers-influxdb"]
jdbc = ["apache-airflow-providers-jdbc"]
jenkins = ["apache-airflow-providers-jenkins"]
microsoft-azure = ["apache-airflow-providers-microsoft-azure"]
microsoft-mssql = ["apache-airflow-providers-microsoft-mssql"]
microsoft-psrp = ["apache-airflow-providers-microsoft-psrp"]
microsoft-winrm = ["apache-airflow-providers-microsoft-winrm"]
mongo = ["apache-airflow-providers-mongo"]
mysql = ["apache-airflow-providers-mysql"]
neo4j = ["apache-airflow-providers-neo4j"]
odbc = ["apache-airflow-providers-odbc"]
openai = ["apache-airflow-providers-openai"]
openfaas = ["apache-airflow-providers-openfaas"]
openlineage = ["apache-airflow-providers-openlineage"]
opensearch = ["apache-airflow-providers-opensearch"]
opsgenie = ["apache-airflow-providers-opsgenie"]
oracle = ["apache-airflow-providers-oracle"]
pagerduty = ["apache-airflow-providers-pagerduty"]
papermill = ["apache-airflow-providers-papermill"]
pgvector = ["apache-airflow-providers-pgvector"]
pinecone = ["apache-airflow-providers-pinecone"]
postgres = ["apache-airflow-providers-postgres"]
presto = ["apache-airflow-providers-presto"]
qdrant = ["apache-airflow-providers-qdrant"]
redis = ["apache-airflow-providers-redis"]
salesforce = ["apache-airflow-providers-salesforce"]
samba = ["apache-airflow-providers-samba"]
segment = ["apache-airflow-providers-segment"]
sendgrid = ["apache-airflow-providers-sendgrid"]
sftp = ["apache-airflow-providers-sftp"]
singularity = ["apache-airflow-providers-singularity"]
slack = ["apache-airflow-providers-slack"]
smtp = ["apache-airflow-providers-smtp"]
snowflake = ["apache-airflow-providers-snowflake"]
sqlite = ["apache-airflow-providers-sqlite"]
ssh = ["apache-airflow-providers-ssh"]
tableau = ["apache-airflow-providers-tableau"]
tabular = ["apache-airflow-providers-tabular"]
telegram = ["apache-airflow-providers-telegram"]
teradata = ["apache-airflow-providers-teradata"]
trino = ["apache-airflow-providers-trino"]
vertica = ["apache-airflow-providers-vertica"]
weaviate = ["apache-airflow-providers-weaviate"]
yandex = ["apache-airflow-providers-yandex"]
ydb = ["apache-airflow-providers-ydb"]
zendesk = ["apache-airflow-providers-zendesk"]
all-core = ["apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow"]
all = ["apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow", "apache-airflow"]
devel-ci = ["aiobotocore (>=2.9.0)", "aiofiles (>=23.2.0)", "aioresponses (>=0.7.6)", "amqp", "astroid (>=2.12.3,<3.0)", "atlasclient (>=0.1.2)", "authlib (>=1.0.0)", "backports-zoneinfo (>=0.2.1)", "bcrypt (>=2.0.0)", "beautifulsoup4 (>=4.7.1)", "black (>=23.12.0)", "blinker (>=1.1)", "blinker (>=1.7.0)", "cgroupspy (>=0.2.2)", "checksumdir (>=1.2.0)", "click (>=8.0)", "click (>=8.0,!=8.1.4,!=8.1.5)", "cloudpickle", "coverage (>=7.4.0)", "diagrams (>=0.23.4)", "docutils (>=0.16,<0.17)", "duckdb (>=0.10.0)", "duckdb (>=0.9.0)", "eralchemy2 (>=1.3.8)", "eventlet (>=0.33.3)", "flask-bcrypt (>=0.7.1)", "gevent (>=0.13)", "gitpython (>=3.1.40)", "graphviz (>=0.12)", "greenlet (>=0.4.9)", "hatch (>=1.9.1)", "hdfs[dataframe,kerberos,avro] (>=2.0.4)", "incremental (>=22.10.0,!=24.7.0,!=24.7.1)", "ipdb (>=0.13.13)", "jmespath (>=0.7.0)", "ldap3 (>=2.5.1)", "mypy (==1.9.0)", "opentelemetry-exporter-prometheus", "pandas (>=1.2.5,<2.2)", "pipdeptree (>=2.13.1)", "plyvel (>=1.5.1)", "pre-commit (>=3.5.0)", "pydantic (>=2.3.0)", "pygithub (>=2.1.1)", "pykerberos (>=1.1.13)", "pytest-asyncio (>=0.23.6)", "pytest-cov (>=4.1.0)", "pytest-custom-exit-code (>=0.3.0)", "pytest-icdiff (>=0.9)", "pytest-instafail (>=0.5.0)", "pytest-mock (>=3.12.0)", "pytest-rerunfailures (>=13.0)", "pytest-timeouts (>=1.2.1)", "pytest-xdist (>=3.5.0)", "pytest (>=8.2,<9)", "python-ldap", "python3-saml (>=1.16.0)", "requests-kerberos (>=0.10.0)", "requests-mock (>=1.11.0)", "requests (>=2.27.0,<3)", "restructuredtext-lint (>=1.4.0)", "rich-click (>=1.7.0)", "ruff (==0.5.5)", "s3fs (>=2023.10.0)", "semver (>=3.0.2)", "sentry-sdk (>=1.32.0,!=1.33.0)", "sphinx-airflow-theme (>=0.0.12)", "sphinx-argparse (>=0.4.0)", "sphinx-autoapi (>=2.1.1)", "sphinx-copybutton (>=0.5.2)", "sphinx-design (>=0.5.0)", "sphinx-jinja (>=2.0.2)", "sphinx-rtd-theme (>=2.0.0)", "sphinx (>=5.3.0,<6.0.0)", "sphinxcontrib-applehelp (>=1.0.4)", "sphinxcontrib-devhelp (>=1.0.2)", "sphinxcontrib-htmlhelp (>=2.0.1)", "sphinxcontrib-httpdomain (>=1.8.1)", "sphinxcontrib-jquery (>=4.1)", "sphinxcontrib-jsmath (>=1.0.1)", "sphinxcontrib-qthelp (>=1.0.3)", "sphinxcontrib-redoc (>=1.6.0)", "sphinxcontrib-serializinghtml (==1.1.5)", "sphinxcontrib-spelling (>=8.0.0)", "statsd (>=3.3.0)", "thrift-sasl (>=0.2.0)", "time-machine (>=2.13.0)", "towncrier (>=23.11.0)", "twine (>=4.0.2)", "types-aiofiles", "types-certifi", "types-croniter", "types-deprecated", "types-docutils", "types-markdown", "types-paramiko", "types-protobuf", "types-pymysql", "types-python-dateutil", "types-python-slugify", "types-pytz", "types-pyyaml", "types-redis", "types-requests", "types-setuptools", "types-tabulate", "types-termcolor", "types-toml", "uv (>=0.1.32)", "virtualenv", "wheel (>=0.42.0)", "yamllint (>=1.33.0)"]

[[package]]
name = "apache-airflow-providers-apache-spark"
version = "5.0.1"
description = "Provider package apache-airflow-providers-apache-spark for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"
grpcio-status = ">=1.59.0"
pyspark = ">=3.1.3"

[package.extras]
cncf-kubernetes = ["apache-airflow-providers-cncf-kubernetes (>=7.4.0)"]
common-compat = ["apache-airflow-providers-common-compat"]

[[package]]
name = "apache-airflow-providers-common-compat"
version = "1.5.1"
description = "Provider package apache-airflow-providers-common-compat for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"

[package.extras]
openlineage = ["apache-airflow-providers-openlineage"]
standard = ["apache-airflow-providers-standard"]

[[package]]
name = "apache-airflow-providers-common-io"
version = "1.5.1"
description = "Provider package apache-airflow-providers-common-io for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"

[package.extras]
common-compat = ["apache-airflow-providers-common-compat"]
openlineage = ["apache-airflow-providers-openlineage"]

[[package]]
name = "apache-airflow-providers-common-sql"
version = "1.24.0"
description = "Provider package apache-airflow-providers-common-sql for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"
methodtools = ">=0.4.7"
more-itertools = ">=9.0.0"
sqlparse = ">=0.5.1"

[package.extras]
openlineage = ["apache-airflow-providers-openlineage"]
pandas = ["pandas (>=2.1.2,<2.2)"]

[[package]]
name = "apache-airflow-providers-fab"
version = "1.5.3"
description = "Provider package apache-airflow-providers-fab for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"
apache-airflow-providers-common-compat = ">=1.2.1"
flask = ">=2.2,<2.3"
flask-appbuilder = "4.5.3"
flask-login = ">=0.6.2"
google-re2 = ">=1.0"
jmespath = ">=0.7.0"

[package.extras]
kerberos = ["kerberos (>=1.3.0)"]

[[package]]
name = "apache-airflow-providers-ftp"
version = "3.12.3"
description = "Provider package apache-airflow-providers-ftp for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"

[package.extras]
common-compat = ["apache-airflow-providers-common-compat"]
openlineage = ["apache-airflow-providers-openlineage"]

[[package]]
name = "apache-airflow-providers-google"
version = "14.0.0"
description = "Provider package apache-airflow-providers-google for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"
apache-airflow-providers-common-compat = ">=1.4.0"
apache-airflow-providers-common-sql = ">=1.20.0"
asgiref = ">=3.5.2"
dill = ">=0.2.3"
gcloud-aio-auth = ">=5.2.0"
gcloud-aio-bigquery = ">=6.1.2"
gcloud-aio-storage = ">=9.0.0"
gcsfs = ">=2023.10.0"
google-ads = ">=25.1.0"
google-analytics-admin = ">=0.9.0"
google-api-core = ">=2.11.0,<2.16.0 || >2.16.0,<2.18.0 || >2.18.0"
google-api-python-client = ">=2.0.2"
google-auth = ">=2.29.0"
google-auth-httplib2 = ">=0.0.1"
google-cloud-aiplatform = {version = ">=1.73.0", extras = ["evaluation"]}
google-cloud-alloydb = ">=0.4.0"
google-cloud-automl = ">=2.12.0"
google-cloud-batch = ">=0.13.0"
google-cloud-bigquery = ">=3.4.0,<3.21.0 || >3.22.0,<3.23.0 || >=3.24.0"
google-cloud-bigquery-datatransfer = ">=3.13.0"
google-cloud-bigtable = ">=2.17.0"
google-cloud-build = ">=3.31.0"
google-cloud-compute = ">=1.10.0"
google-cloud-container = ">=2.17.4"
google-cloud-datacatalog = ">=3.23.0"
google-cloud-dataflow-client = ">=0.8.6"
google-cloud-dataform = ">=0.5.0"
google-cloud-dataplex = ">=2.6.0"
google-cloud-dataproc = ">=5.12.0"
google-cloud-dataproc-metastore = ">=1.12.0"
google-cloud-dlp = ">=3.12.0"
google-cloud-kms = ">=2.15.0"
google-cloud-language = ">=2.9.0"
google-cloud-logging = ">=3.5.0"
google-cloud-managedkafka = ">=0.1.6"
google-cloud-memcache = ">=1.7.0"
google-cloud-monitoring = ">=2.18.0"
google-cloud-orchestration-airflow = ">=1.10.0"
google-cloud-os-login = ">=2.9.1"
google-cloud-pubsub = ">=2.19.0"
google-cloud-redis = ">=2.12.0"
google-cloud-run = ">=0.10.0"
google-cloud-secret-manager = ">=2.16.0"
google-cloud-spanner = ">=3.11.1,<3.49.0 || >3.49.0"
google-cloud-speech = ">=2.18.0"
google-cloud-storage = ">=2.7.0"
google-cloud-storage-transfer = ">=1.4.1"
google-cloud-tasks = ">=2.13.0"
google-cloud-texttospeech = ">=2.14.1"
google-cloud-translate = ">=3.16.0"
google-cloud-videointelligence = ">=2.11.0"
google-cloud-vision = ">=3.4.0"
google-cloud-workflows = ">=1.10.0"
grpcio-gcp = ">=0.2.2"
httpx = ">=0.25.0"
immutabledict = ">=4.2.0"
json-merge-patch = ">=0.2"
looker-sdk = ">=22.4.0,<24.18.0 || >24.18.0"
pandas = ">=2.1.2,<2.2"
pandas-gbq = ">=0.7.0"
proto-plus = ">=1.19.6"
pyarrow = ">=14.0.1"
PyOpenSSL = ">=23.0.0"
python-slugify = ">=7.0.0"
sqlalchemy-bigquery = ">=1.2.1"
sqlalchemy-spanner = ">=1.6.2"
tenacity = ">=8.1.0"

[package.extras]
amazon = ["apache-airflow-providers-amazon (>=2.6.0)"]
apache-beam = ["apache-beam[gcp] (>=2.53.0)", "apache-beam[gcp] (>=2.57.0)"]
apache-cassandra = ["apache-airflow-providers-apache-cassandra"]
cncf-kubernetes = ["apache-airflow-providers-cncf-kubernetes (>=10.1.0)"]
facebook = ["apache-airflow-providers-facebook (>=2.2.0)"]
leveldb = ["plyvel (>=1.5.1)"]
microsoft-azure = ["apache-airflow-providers-microsoft-azure"]
microsoft-mssql = ["apache-airflow-providers-microsoft-mssql"]
mysql = ["apache-airflow-providers-mysql"]
openlineage = ["apache-airflow-providers-openlineage"]
oracle = ["apache-airflow-providers-oracle (>=3.1.0)"]
postgres = ["apache-airflow-providers-postgres"]
presto = ["apache-airflow-providers-presto"]
salesforce = ["apache-airflow-providers-salesforce"]
sftp = ["apache-airflow-providers-sftp"]
ssh = ["apache-airflow-providers-ssh"]
trino = ["apache-airflow-providers-trino"]

[[package]]
name = "apache-airflow-providers-http"
version = "5.2.1"
description = "Provider package apache-airflow-providers-http for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
aiohttp = ">=3.9.2,<3.11.0 || >3.11.0"
apache-airflow = ">=2.9.0"
asgiref = ">=2.3.0"
requests = ">=2.27.0,<3"
requests-toolbelt = ">=1.0.0"

[[package]]
name = "apache-airflow-providers-imap"
version = "3.8.3"
description = "Provider package apache-airflow-providers-imap for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"

[[package]]
name = "apache-airflow-providers-smtp"
version = "2.0.1"
description = "Provider package apache-airflow-providers-smtp for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
apache-airflow = ">=2.9.0"

[[package]]
name = "apache-airflow-providers-sqlite"
version = "4.0.1"
description = "Provider package apache-airflow-providers-sqlite for Apache Airflow"
category = "main"
optional = false
python-versions = "~=3.9"

[package.dependencies]
aiosqlite = ">=0.20.0"
apache-airflow = ">=2.9.0"
apache-airflow-providers-common-sql = ">=1.20.0"

[[package]]
name = "apispec"
version = "6.8.1"
description = "A pluggable API specification generator. Currently supports the OpenAPI Specification (f.k.a. the Swagger specification)."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
packaging = ">=21.3"
PyYAML = {version = ">=3.10", optional = true, markers = "extra == \"yaml\""}

[package.extras]
dev = ["apispec", "tox", "pre-commit (>=3.5,<5.0)"]
docs = ["apispec", "pyyaml (==6.0.2)", "sphinx (==8.1.3)", "sphinx-issues (==5.0.0)", "sphinx-rtd-theme (==3.0.2)"]
marshmallow = ["marshmallow (>=3.18.0)"]
tests = ["apispec", "openapi-spec-validator (==0.7.1)", "pytest"]
yaml = ["PyYAML (>=3.10)"]

[[package]]
name = "argcomplete"
version = "3.6.0"
description = "Bash tab completion for argparse"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
test = ["coverage", "mypy", "pexpect", "ruff", "wheel"]

[[package]]
name = "asgiref"
version = "3.8.1"
description = "ASGI specs, helper code, and adapters"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = {version = ">=4", markers = "python_version < \"3.11\""}

[package.extras]
tests = ["pytest", "pytest-asyncio", "mypy (>=0.800)"]

[[package]]
name = "async-timeout"
version = "5.0.1"
description = "Timeout context manager for asyncio programs"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "attrs"
version = "25.3.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
benchmark = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-codspeed", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
cov = ["cloudpickle", "coverage[toml] (>=5.3)", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
dev = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pre-commit-uv", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
docs = ["cogapp", "furo", "myst-parser", "sphinx", "sphinx-notfound-page", "sphinxcontrib-towncrier", "towncrier"]
tests = ["cloudpickle", "hypothesis", "mypy (>=1.11.1)", "pympler", "pytest-mypy-plugins", "pytest-xdist", "pytest (>=4.3.0)"]
tests-mypy = ["mypy (>=1.11.1)", "pytest-mypy-plugins"]

[[package]]
name = "babel"
version = "2.17.0"
description = "Internationalization utilities"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["tzdata", "backports.zoneinfo", "freezegun (>=1.0,<2.0)", "jinja2 (>=3.0)", "pytest-cov", "pytest (>=6.0)", "pytz", "setuptools"]

[[package]]
name = "backoff"
version = "2.2.1"
description = "Function decoration for backoff and retry"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[[package]]
name = "beautifulsoup4"
version = "4.13.3"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
soupsieve = ">1.2"
typing-extensions = ">=4.0.0"

[package.extras]
cchardet = ["cchardet"]
chardet = ["chardet"]
charset-normalizer = ["charset-normalizer"]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
name = "blinker"
version = "1.9.0"
description = "Fast, simple object-to-object and broadcast signaling"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "cachelib"
version = "0.13.0"
description = "A collection of cache libraries in the same API interface."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "cachetools"
version = "5.5.2"
description = "Extensible memoizing collections and decorators"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "cattrs"
version = "24.1.2"
description = "Composable complex class support for attrs and dataclasses."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=23.1.0"
exceptiongroup = {version = ">=1.1.1", markers = "python_version < \"3.11\""}
typing-extensions = {version = ">=4.1.0,<4.6.3 || >4.6.3", markers = "python_version < \"3.11\""}

[package.extras]
bson = ["pymongo (>=4.4.0)"]
cbor2 = ["cbor2 (>=5.4.6)"]
msgpack = ["msgpack (>=1.0.5)"]
msgspec = ["msgspec (>=0.18.5)"]
orjson = ["orjson (>=3.9.2)"]
pyyaml = ["pyyaml (>=6.0)"]
tomlkit = ["tomlkit (>=0.11.8)"]
ujson = ["ujson (>=5.7.0)"]

[[package]]
name = "certifi"
version = "2025.1.31"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.17.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pycparser = "*"

[[package]]
name = "chardet"
version = "5.2.0"
description = "Universal encoding detector for Python 3"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "charset-normalizer"
version = "3.4.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "click"
version = "8.1.8"
description = "Composable command line interface toolkit"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[[package]]
name = "clickclick"
version = "20.10.2"
description = "Click utility functions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
click = ">=4.0"
PyYAML = ">=3.11"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "colorlog"
version = "6.9.0"
description = "Add colours to the output of Python's logging module."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
colorama = {version = "*", markers = "sys_platform == \"win32\""}

[package.extras]
development = ["black", "flake8", "mypy", "pytest", "types-colorama"]

[[package]]
name = "configupdater"
version = "3.2"
description = "Parser like ConfigParser but for updating configuration files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["sphinx", "flake8", "pytest", "pytest-cov", "pytest-xdist", "pytest-randomly"]

[[package]]
name = "connexion"
version = "2.14.2"
description = "Connexion - API first applications with OpenAPI/Swagger and Flask"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
clickclick = ">=1.2,<21"
flask = ">=1.0.4,<2.3"
inflection = ">=0.3.1,<0.6"
itsdangerous = ">=0.24"
jsonschema = ">=2.5.1,<5"
packaging = ">=20"
PyYAML = ">=5.1,<7"
requests = ">=2.9.1,<3"
werkzeug = ">=1.0,<2.3"

[package.extras]
aiohttp = ["aiohttp (>=2.3.10,<4)", "aiohttp-jinja2 (>=0.14.0,<2)", "MarkupSafe (>=0.23)"]
docs = ["sphinx-autoapi (==1.8.1)"]
flask = ["flask (>=1.0.4,<2.3)", "itsdangerous (>=0.24)"]
swagger-ui = ["swagger-ui-bundle (>=0.0.2,<0.1)"]
tests = ["decorator (>=5,<6)", "pytest (>=6,<7)", "pytest-cov (>=2,<3)", "testfixtures (>=6,<7)", "flask (>=1.0.4,<2.3)", "itsdangerous (>=0.24)", "swagger-ui-bundle (>=0.0.2,<0.1)", "aiohttp (>=2.3.10,<4)", "aiohttp-jinja2 (>=0.14.0,<2)", "MarkupSafe (>=0.23)", "pytest-aiohttp", "aiohttp-remotes"]

[[package]]
name = "cron-descriptor"
version = "1.4.5"
description = "A Python library that converts cron expressions into human readable strings."
category = "main"
optional = false
python-versions = "*"

[package.extras]
dev = ["polib"]

[[package]]
name = "croniter"
version = "6.0.0"
description = "croniter provides iteration for datetime object with cron like format"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.6"

[package.dependencies]
python-dateutil = "*"
pytz = ">2021.1"

[[package]]
name = "cryptography"
version = "44.0.2"
description = "cryptography is a package which provides cryptographic recipes and primitives to Python developers."
category = "main"
optional = false
python-versions = "!=3.9.0,!=3.9.1,>=3.7"

[package.dependencies]
cffi = {version = ">=1.12", markers = "platform_python_implementation != \"PyPy\""}

[package.extras]
ssh = ["bcrypt (>=3.1.5)"]
nox = ["nox (>=2024.4.15)", "nox[uv] (>=2024.3.2)"]
test = ["cryptography-vectors (==44.0.2)", "pytest (>=7.4.0)", "pytest-benchmark (>=4.0)", "pytest-cov (>=2.10.1)", "pytest-xdist (>=3.5.0)", "pretend (>=0.7)", "certifi (>=2024)"]
test-randomorder = ["pytest-randomly"]
docs = ["sphinx (>=5.3.0)", "sphinx-rtd-theme (>=3.0.0)"]
docstest = ["pyenchant (>=3)", "readme-renderer (>=30.0)", "sphinxcontrib-spelling (>=7.3.1)"]
sdist = ["build (>=1.0.0)"]
pep8test = ["ruff (>=0.3.6)", "mypy (>=1.4)", "check-sdist", "click (>=8.0.1)"]

[[package]]
name = "db-dtypes"
version = "1.4.2"
description = "Pandas Data Types for SQL systems (BigQuery, Spanner)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.16.6"
packaging = ">=17.0"
pandas = ">=0.24.2"
pyarrow = ">=3.0.0"

[[package]]
name = "decorator"
version = "5.2.1"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "deprecated"
version = "1.2.18"
description = "Python @deprecated decorator to deprecate old python classes, functions or methods."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
wrapt = ">=1.10,<2"

[package.extras]
dev = ["tox", "pytest", "pytest-cov", "bump2version (<1)", "setuptools"]

[[package]]
name = "dill"
version = "0.3.9"
description = "serialize all of Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
graph = ["objgraph (>=1.7.2)"]
profile = ["gprof2dot (>=2022.7.29)"]

[[package]]
name = "dnspython"
version = "2.7.0"
description = "DNS toolkit"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
dev = ["black (>=23.1.0)", "coverage (>=7.0)", "flake8 (>=7)", "hypercorn (>=0.16.0)", "mypy (>=1.8)", "pylint (>=3)", "pytest-cov (>=4.1.0)", "pytest (>=7.4)", "quart-trio (>=0.11.0)", "sphinx-rtd-theme (>=2.0.0)", "sphinx (>=7.2.0)", "twine (>=4.0.0)", "wheel (>=0.42.0)"]
dnssec = ["cryptography (>=43)"]
doh = ["h2 (>=4.1.0)", "httpcore (>=1.0.0)", "httpx (>=0.26.0)"]
doq = ["aioquic (>=1.0.0)"]
idna = ["idna (>=3.7)"]
trio = ["trio (>=0.23)"]
wmi = ["wmi (>=1.5.1)"]

[[package]]
name = "docstring-parser"
version = "0.16"
description = "Parse Python docstrings in reST, Google and Numpydoc format"
category = "main"
optional = false
python-versions = ">=3.6,<4.0"

[[package]]
name = "email-validator"
version = "2.2.0"
description = "A robust email address syntax and deliverability validation library."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
dnspython = ">=2.0.0"
idna = ">=2.0.0"

[[package]]
name = "exceptiongroup"
version = "1.2.2"
description = "Backport of PEP 654 (exception groups)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "flask"
version = "2.2.5"
description = "A simple framework for building complex web applications."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
click = ">=8.0"
itsdangerous = ">=2.0"
Jinja2 = ">=3.0"
Werkzeug = ">=2.2.2"

[package.extras]
async = ["asgiref (>=3.2)"]
dotenv = ["python-dotenv"]

[[package]]
name = "flask-appbuilder"
version = "4.5.3"
description = "Simple and rapid application development framework, built on top of Flask. includes detailed security, auto CRUD generation for your models, google charts and much more."
category = "main"
optional = false
python-versions = "~=3.7"

[package.dependencies]
apispec = {version = ">=6.0.0,<7", extras = ["yaml"]}
click = ">=8,<9"
colorama = ">=0.3.9,<1"
email-validator = ">=1.0.5"
Flask = ">=2,<3.0.0"
Flask-Babel = ">=1,<3"
Flask-JWT-Extended = ">=4.0.0,<5.0.0"
Flask-Limiter = ">3,<4"
Flask-Login = ">=0.3,<0.7"
Flask-SQLAlchemy = ">=2.4,<3"
Flask-WTF = ">=0.14.2,<2"
jsonschema = ">=3,<5"
marshmallow = ">=3.18.0,<4"
marshmallow-sqlalchemy = ">=0.22.0,<0.29.0"
prison = ">=0.2.1,<1.0.0"
PyJWT = ">=2.0.0,<3.0.0"
python-dateutil = ">=2.3,<3"
SQLAlchemy = "<1.5"
sqlalchemy-utils = ">=0.32.21,<1"
werkzeug = "<4"
WTForms = "<4"

[package.extras]
jmespath = ["jmespath (>=0.9.5)"]
oauth = ["Authlib (>=0.14,<2.0.0)"]
openid = ["Flask-OpenID (>=1.2.5,<2)"]
talisman = ["flask-talisman (>=1.0.0,<2.0)"]

[[package]]
name = "flask-babel"
version = "2.0.0"
description = "Adds i18n/l10n support to Flask applications"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Babel = ">=2.3"
Flask = "*"
Jinja2 = ">=2.5"
pytz = "*"

[package.extras]
dev = ["pytest", "pytest-mock", "bumpversion", "ghp-import", "sphinx", "pallets-sphinx-themes"]

[[package]]
name = "flask-caching"
version = "2.3.1"
description = "Adds caching support to Flask applications."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
cachelib = ">=0.9.0"
Flask = "*"

[[package]]
name = "flask-jwt-extended"
version = "4.7.1"
description = "Extended JWT integration with Flask"
category = "main"
optional = false
python-versions = "<4,>=3.9"

[package.dependencies]
Flask = ">=2.0,<4.0"
PyJWT = ">=2.0,<3.0"
Werkzeug = ">=0.14"

[package.extras]
asymmetric-crypto = ["cryptography (>=3.3.1)"]

[[package]]
name = "flask-limiter"
version = "3.12"
description = "Rate limiting for flask applications"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
Flask = ">=2"
limits = ">=3.13"
ordered-set = ">4,<5"
rich = ">=12,<14"

[package.extras]
redis = ["limits"]
memcached = ["limits"]
mongodb = ["limits"]
valkey = ["limits"]

[[package]]
name = "flask-login"
version = "0.6.3"
description = "User authentication and session management for Flask."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
Flask = ">=1.0.4"
Werkzeug = ">=1.0.1"

[[package]]
name = "flask-session"
version = "0.5.0"
description = "Server-side session support for Flask"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cachelib = "*"
flask = ">=2.2"

[[package]]
name = "flask-sqlalchemy"
version = "2.5.1"
description = "Adds SQLAlchemy support to your Flask application."
category = "main"
optional = false
python-versions = ">= 2.7, != 3.0.*, != 3.1.*, != 3.2.*, != 3.3.*"

[package.dependencies]
Flask = ">=0.10"
SQLAlchemy = ">=0.8.0"

[[package]]
name = "flask-wtf"
version = "1.2.2"
description = "Form rendering, validation, and CSRF protection for Flask with WTForms."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
flask = "*"
itsdangerous = "*"
wtforms = "*"

[package.extras]
email = ["email-validator"]

[[package]]
name = "frozenlist"
version = "1.5.0"
description = "A list-like structure which implements collections.abc.MutableSequence"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "fsspec"
version = "2025.3.0"
description = "File-system specification"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
abfs = ["adlfs"]
adl = ["adlfs"]
arrow = ["pyarrow (>=1)"]
dask = ["dask", "distributed"]
dev = ["pre-commit", "ruff"]
doc = ["numpydoc", "sphinx", "sphinx-design", "sphinx-rtd-theme", "yarl"]
dropbox = ["dropbox", "dropboxdrivefs", "requests"]
full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "dask", "distributed", "dropbox", "dropboxdrivefs", "fusepy", "gcsfs", "libarchive-c", "ocifs", "panel", "paramiko", "pyarrow (>=1)", "pygit2", "requests", "s3fs", "smbprotocol", "tqdm"]
fuse = ["fusepy"]
gcs = ["gcsfs"]
git = ["pygit2"]
github = ["requests"]
gs = ["gcsfs"]
gui = ["panel"]
hdfs = ["pyarrow (>=1)"]
http = ["aiohttp (!=4.0.0a0,!=4.0.0a1)"]
libarchive = ["libarchive-c"]
oci = ["ocifs"]
s3 = ["s3fs"]
sftp = ["paramiko"]
smb = ["smbprotocol"]
ssh = ["paramiko"]
test = ["aiohttp (!=4.0.0a0,!=4.0.0a1)", "numpy", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "requests"]
test-downstream = ["aiobotocore (>=2.5.4,<3.0.0)", "dask", "moto[server] (>4,<5)", "pytest-timeout", "xarray"]
test-full = ["adlfs", "aiohttp (!=4.0.0a0,!=4.0.0a1)", "cloudpickle", "dask", "distributed", "dropbox", "dropboxdrivefs", "fastparquet", "fusepy", "gcsfs", "jinja2", "kerchunk", "libarchive-c", "lz4", "notebook", "numpy", "ocifs", "pandas", "panel", "paramiko", "pyarrow", "pyarrow (>=1)", "pyftpdlib", "pygit2", "pytest", "pytest-asyncio (!=0.22.0)", "pytest-benchmark", "pytest-cov", "pytest-mock", "pytest-recording", "pytest-rerunfailures", "python-snappy", "requests", "smbprotocol", "tqdm", "urllib3", "zarr", "zstandard"]
tqdm = ["tqdm"]

[[package]]
name = "gcloud-aio-auth"
version = "5.4.0"
description = "Python Client for Google Cloud Auth"
category = "main"
optional = false
python-versions = "<4.0,>=3.9"

[package.dependencies]
aiohttp = ">=3.9.0,<4.0.0"
backoff = ">=1.0.0,<3.0.0"
chardet = ">=2.0,<6.0"
cryptography = ">=2.0.0,<47.0.0"
pyjwt = ">=1.5.3,<3.0.0"

[[package]]
name = "gcloud-aio-bigquery"
version = "7.1.0"
description = "Python Client for Google Cloud BigQuery"
category = "main"
optional = false
python-versions = ">=3.8,<4.0"

[package.dependencies]
gcloud-aio-auth = ">=3.1.0,<6.0.0"

[[package]]
name = "gcloud-aio-storage"
version = "9.4.0"
description = "Python Client for Google Cloud Storage"
category = "main"
optional = false
python-versions = "<4.0,>=3.9"

[package.dependencies]
aiofiles = ">=0.6.0,<25.0.0"
gcloud-aio-auth = ">=5.3.0,<6.0.0"
pyasn1-modules = ">=0.2.1,<0.4.2"
rsa = ">=3.1.4,<5.0.0"

[[package]]
name = "gcsfs"
version = "2025.3.0"
description = "Convenient Filesystem interface over GCS"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
aiohttp = "<4.0.0a0 || >4.0.0a0,<4.0.0a1 || >4.0.0a1"
decorator = ">4.1.2"
fsspec = "2025.3.0"
google-auth = ">=1.2"
google-auth-oauthlib = "*"
google-cloud-storage = "*"
requests = "*"

[package.extras]
gcsfuse = ["fusepy"]
crc = ["crcmod"]

[[package]]
name = "google-ads"
version = "26.0.1"
description = "Client library for the Google Ads API"
category = "main"
optional = false
python-versions = "<3.14,>=3.9"

[package.dependencies]
google-api-core = ">=2.13.0,<=3.0.0"
google-auth-oauthlib = ">=1.0.0,<2.0.0"
googleapis-common-protos = ">=1.56.3,<2.0.0"
grpcio = ">=1.59.0,<2.0.0"
grpcio-status = ">=1.59.0,<2.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=4.25.0,<7.0.0"
PyYAML = ">=5.1,<7.0"

[package.extras]
tests = ["nox (>=2020.12.31,<2022.6)"]

[[package]]
name = "google-analytics-admin"
version = "0.23.6"
description = "Google Analytics Admin API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-api-core"
version = "2.24.2"
description = "Google API client core library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-auth = ">=2.14.1,<3.0.0"
googleapis-common-protos = ">=1.56.2,<2.0.0"
grpcio = {version = ">=1.33.2,<2.0dev", optional = true, markers = "extra == \"grpc\""}
grpcio-status = {version = ">=1.33.2,<2.0.dev0", optional = true, markers = "extra == \"grpc\""}
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.19.5,<3.20.0 || >3.20.0,<3.20.1 || >3.20.1,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"
requests = ">=2.18.0,<3.0.0"

[package.extras]
async-rest = ["google-auth[aiohttp] (>=2.35.0,<3.0.dev0)"]
grpc = ["grpcio (>=1.33.2,<2.0dev)", "grpcio-status (>=1.33.2,<2.0.dev0)", "grpcio (>=1.49.1,<2.0dev)", "grpcio-status (>=1.49.1,<2.0.dev0)"]
grpcgcp = ["grpcio-gcp (>=0.2.2,<1.0.dev0)"]
grpcio-gcp = ["grpcio-gcp (>=0.2.2,<1.0.dev0)"]

[[package]]
name = "google-api-python-client"
version = "2.165.0"
description = "Google API Client Library for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = ">=1.31.5,<2.0.0 || >2.3.0,<3.0.0"
google-auth = ">=1.32.0,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
google-auth-httplib2 = ">=0.2.0,<1.0.0"
httplib2 = ">=0.19.0,<1.0.0"
uritemplate = ">=3.0.1,<5"

[[package]]
name = "google-auth"
version = "2.38.0"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cachetools = ">=2.0.0,<6.0"
pyasn1-modules = ">=0.2.1"
rsa = ">=3.1.4,<5"

[package.extras]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0.dev0)", "requests (>=2.20.0,<3.0.0.dev0)"]
enterprise-cert = ["cryptography", "pyopenssl"]
pyjwt = ["pyjwt (>=2.0)", "cryptography (>=38.0.3)"]
pyopenssl = ["pyopenssl (>=20.0.0)", "cryptography (>=38.0.3)"]
reauth = ["pyu2f (>=0.1.5)"]
requests = ["requests (>=2.20.0,<3.0.0.dev0)"]

[[package]]
name = "google-auth-httplib2"
version = "0.2.0"
description = "Google Authentication Library: httplib2 transport"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
google-auth = "*"
httplib2 = ">=0.19.0"

[[package]]
name = "google-auth-oauthlib"
version = "1.2.1"
description = "Google Authentication Library"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
google-auth = ">=2.15.0"
requests-oauthlib = ">=0.7.0"

[package.extras]
tool = ["click (>=6.0.0)"]

[[package]]
name = "google-cloud-aiplatform"
version = "1.85.0"
description = "Vertex AI API client library"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
docstring-parser = "<1"
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.8.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<3.0.0"
google-cloud-bigquery = ">=1.15.0,<3.20.0 || >3.20.0,<4.0.0"
google-cloud-resource-manager = ">=1.3.3,<3.0.0"
google-cloud-storage = ">=1.32.0,<3.0.0"
packaging = ">=14.3"
pandas = {version = ">=1.0.0", optional = true, markers = "extra == \"evaluation\""}
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<6.0.0"
pydantic = "<3"
scikit-learn = [
    {version = "<1.6.0", optional = true, markers = "python_version <= \"3.10\" or python_version <= \"3.10\" and extra == \"evaluation\""},
    {version = "*", optional = true, markers = "python_version > \"3.10\" or python_version > \"3.10\" and extra == \"evaluation\""},
]
shapely = "<3.0.0"
tqdm = {version = ">=4.23.0", optional = true, markers = "extra == \"evaluation\""}
typing-extensions = "*"

[package.extras]
ag2 = ["ag2", "openinference-instrumentation-autogen (>=0.1.6,<0.2)"]
ag2-testing = ["pytest-xdist", "google-cloud-trace (<2)", "opentelemetry-sdk (<2)", "typing-extensions", "absl-py", "cloudpickle (>=3.0,<4.0)", "opentelemetry-exporter-gcp-trace (<2)", "openinference-instrumentation-autogen (>=0.1.6,<0.2)", "pydantic (>=2.6.3,<3)", "ag2"]
agent-engines = ["packaging (>=24.0)", "cloudpickle (>=3.0,<4.0)", "google-cloud-trace (<2)", "google-cloud-logging (<4)", "opentelemetry-sdk (<2)", "opentelemetry-exporter-gcp-trace (<2)", "pydantic (>=2.10,<3)", "typing-extensions"]
autologging = ["mlflow (>=1.27.0,<=2.16.0)"]
cloud-profiler = ["tensorboard-plugin-profile (>=2.4.0,<2.18.0)", "werkzeug (>=2.0.0,<2.1.0)", "tensorflow (>=2.4.0,<3.0.0)"]
datasets = ["pyarrow (>=3.0.0,<8.0.0)", "pyarrow (>=10.0.1)", "pyarrow (>=14.0.0)"]
endpoint = ["requests (>=2.28.1)"]
evaluation = ["pandas (>=1.0.0)", "tqdm (>=4.23.0)", "scikit-learn (<1.6.0)", "scikit-learn"]
full = ["httpx (>=0.23.0,<0.25.0)", "google-cloud-bigquery", "starlette (>=0.17.1)", "numpy (>=1.15.0)", "lit-nlp (==0.4.0)", "mlflow (>=1.27.0,<=2.16.0)", "tqdm (>=4.23.0)", "google-cloud-bigquery-storage", "google-vizier (>=0.1.6)", "docker (>=5.0.3)", "fastapi (>=0.71.0,<=0.114.0)", "immutabledict", "setuptools (<70.0.0)", "tensorflow (>=2.3.0,<3.0.0)", "pyarrow (>=6.0.1)", "uvicorn[standard] (>=0.16.0)", "explainable-ai-sdk (>=1.0.0)", "urllib3 (>=1.21.1,<1.27)", "pyyaml (>=5.3.1,<7)", "tensorflow (>=2.4.0,<3.0.0)", "werkzeug (>=2.0.0,<2.1.0)", "tensorboard-plugin-profile (>=2.4.0,<2.18.0)", "pandas (>=1.0.0)", "requests (>=2.28.1)", "pyarrow (>=3.0.0,<8.0.0)", "ray[default] (>=2.4,<2.5.0 || >2.9.0,!=2.9.1,!=2.9.2,<2.10.0 || 2.33.0)", "scikit-learn (<1.6.0)", "tensorflow (>=2.3.0,<3.0.0)", "ray[default] (>=2.5,<=2.33.0)", "pyarrow (>=10.0.1)", "scikit-learn", "pyarrow (>=14.0.0)"]
langchain = ["langchain (>=0.3,<0.4)", "langchain-core (>=0.3,<0.4)", "langchain-google-vertexai (>=2,<3)", "langgraph (>=0.2.45,<0.3)", "openinference-instrumentation-langchain (>=0.1.19,<0.2)"]
langchain-testing = ["pytest-xdist", "langchain-google-vertexai (>=2,<3)", "langchain (>=0.3,<0.4)", "google-cloud-trace (<2)", "opentelemetry-sdk (<2)", "typing-extensions", "absl-py", "cloudpickle (>=3.0,<4.0)", "langgraph (>=0.2.45,<0.3)", "langchain-core (>=0.3,<0.4)", "opentelemetry-exporter-gcp-trace (<2)", "openinference-instrumentation-langchain (>=0.1.19,<0.2)", "pydantic (>=2.6.3,<3)"]
lit = ["tensorflow (>=2.3.0,<3.0.0)", "pandas (>=1.0.0)", "lit-nlp (==0.4.0)", "explainable-ai-sdk (>=1.0.0)"]
metadata = ["pandas (>=1.0.0)", "numpy (>=1.15.0)"]
pipelines = ["pyyaml (>=5.3.1,<7)"]
prediction = ["docker (>=5.0.3)", "fastapi (>=0.71.0,<=0.114.0)", "httpx (>=0.23.0,<0.25.0)", "starlette (>=0.17.1)", "uvicorn[standard] (>=0.16.0)"]
private-endpoints = ["urllib3 (>=1.21.1,<1.27)", "requests (>=2.28.1)"]
ray = ["setuptools (<70.0.0)", "google-cloud-bigquery-storage", "google-cloud-bigquery", "pandas (>=1.0.0)", "pyarrow (>=6.0.1)", "immutabledict", "ray[default] (>=2.4,<2.5.0 || >2.9.0,!=2.9.1,!=2.9.2,<2.10.0 || 2.33.0)", "ray[default] (>=2.5,<=2.33.0)"]
ray-testing = ["setuptools (<70.0.0)", "google-cloud-bigquery-storage", "google-cloud-bigquery", "pandas (>=1.0.0)", "pyarrow (>=6.0.1)", "immutabledict", "pytest-xdist", "ray", "scikit-learn (<1.6.0)", "tensorflow", "torch (>=2.0.0,<2.1.0)", "xgboost", "xgboost-ray"]
ray_testing = ["ray[default] (>=2.4,<2.5.0 || >2.9.0,!=2.9.1,!=2.9.2,<2.10.0 || 2.33.0)", "ray[default] (>=2.5,<=2.33.0)"]
reasoningengine = ["cloudpickle (>=3.0,<4.0)", "google-cloud-trace (<2)", "opentelemetry-sdk (<2)", "opentelemetry-exporter-gcp-trace (<2)", "pydantic (>=2.6.3,<3)", "typing-extensions"]
tensorboard = ["tensorboard-plugin-profile (>=2.4.0,<2.18.0)", "werkzeug (>=2.0.0,<2.1.0)", "tensorflow (>=2.4.0,<3.0.0)", "tensorflow (>=2.3.0,<3.0.0)"]
testing = ["httpx (>=0.23.0,<0.25.0)", "google-cloud-bigquery", "starlette (>=0.17.1)", "numpy (>=1.15.0)", "lit-nlp (==0.4.0)", "mlflow (>=1.27.0,<=2.16.0)", "tqdm (>=4.23.0)", "google-cloud-bigquery-storage", "google-vizier (>=0.1.6)", "docker (>=5.0.3)", "fastapi (>=0.71.0,<=0.114.0)", "immutabledict", "setuptools (<70.0.0)", "tensorflow (>=2.3.0,<3.0.0)", "pyarrow (>=6.0.1)", "uvicorn[standard] (>=0.16.0)", "explainable-ai-sdk (>=1.0.0)", "urllib3 (>=1.21.1,<1.27)", "pyyaml (>=5.3.1,<7)", "tensorflow (>=2.4.0,<3.0.0)", "werkzeug (>=2.0.0,<2.1.0)", "tensorboard-plugin-profile (>=2.4.0,<2.18.0)", "pandas (>=1.0.0)", "requests (>=2.28.1)", "sentencepiece (>=0.2.0)", "nltk", "aiohttp", "google-api-core (>=2.11,<3.0.0)", "grpcio-testing", "ipython", "kfp (>=2.6.0,<3.0.0)", "pytest-asyncio", "pytest-xdist", "requests-toolbelt (<1.0.0)", "xgboost", "pyarrow (>=3.0.0,<8.0.0)", "ray[default] (>=2.4,<2.5.0 || >2.9.0,!=2.9.1,!=2.9.2,<2.10.0 || 2.33.0)", "scikit-learn (<1.6.0)", "tensorflow (>=2.3.0,<3.0.0)", "tensorflow (==2.13.0)", "torch (>=2.0.0,<2.1.0)", "ray[default] (>=2.5,<=2.33.0)", "pyarrow (>=10.0.1)", "scikit-learn", "tensorflow (==2.16.1)", "torch (>=2.2.0)", "bigframes", "pyarrow (>=14.0.0)"]
tokenization = ["sentencepiece (>=0.2.0)"]
vizier = ["google-vizier (>=0.1.6)"]
xai = ["tensorflow (>=2.3.0,<3.0.0)"]

[[package]]
name = "google-cloud-alloydb"
version = "0.4.5"
description = "Google Cloud Alloydb API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-appengine-logging"
version = "1.6.1"
description = "Google Cloud Appengine Logging API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-audit-log"
version = "0.3.2"
description = "Google Cloud Audit Protos"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
googleapis-common-protos = ">=1.56.2,<2.0.0"
protobuf = ">=3.20.2,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-automl"
version = "2.16.3"
description = "Google Cloud Automl API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[package.extras]
libcst = ["libcst (>=0.2.5)"]
pandas = ["pandas (>=1.0.5)"]
storage = ["google-cloud-storage (>=1.18.0,<4.0.0)"]

[[package]]
name = "google-cloud-batch"
version = "0.17.35"
description = "Google Cloud Batch API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-bigquery"
version = "3.30.0"
description = "Google BigQuery API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=2.11.1,<3.0.0dev", extras = ["grpc"]}
google-auth = ">=2.14.1,<3.0.0dev"
google-cloud-core = ">=2.4.1,<3.0.0dev"
google-resumable-media = ">=2.0.0,<3.0dev"
packaging = ">=20.0.0"
python-dateutil = ">=2.7.3,<3.0dev"
requests = ">=2.21.0,<3.0.0dev"

[package.extras]
all = ["google-cloud-bigquery"]
bigquery-v2 = ["proto-plus (>=1.22.3,<2.0.0dev)", "protobuf (>=3.20.2,!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0dev)"]
bqstorage = ["google-cloud-bigquery-storage (>=2.6.0,<3.0.0dev)", "grpcio (>=1.47.0,<2.0dev)", "pyarrow (>=3.0.0)", "grpcio (>=1.49.1,<2.0dev)"]
geopandas = ["geopandas (>=0.9.0,<2.0dev)", "Shapely (>=1.8.4,<3.0.0dev)"]
ipython = ["bigquery-magics (>=0.1.0)"]
ipywidgets = ["ipywidgets (>=7.7.0)", "ipykernel (>=6.0.0)"]
opentelemetry = ["opentelemetry-api (>=1.1.0)", "opentelemetry-sdk (>=1.1.0)", "opentelemetry-instrumentation (>=0.20b0)"]
pandas = ["pandas (>=1.1.0)", "grpcio (>=1.47.0,<2.0dev)", "pyarrow (>=3.0.0)", "db-dtypes (>=0.3.0,<2.0.0dev)", "importlib-metadata (>=1.0.0)", "grpcio (>=1.49.1,<2.0dev)", "pandas-gbq (>=0.26.1)"]
tqdm = ["tqdm (>=4.7.4,<5.0.0dev)"]

[[package]]
name = "google-cloud-bigquery-datatransfer"
version = "3.19.1"
description = "Google Cloud Bigquery Datatransfer API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-bigtable"
version = "2.30.0"
description = "Google Cloud Bigtable API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=2.16.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
google-cloud-core = ">=1.4.4,<3.0.0"
google-crc32c = ">=1.5.0,<2.0.0dev"
grpc-google-iam-v1 = ">=0.12.4,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[package.extras]
libcst = ["libcst (>=0.2.5)"]

[[package]]
name = "google-cloud-build"
version = "3.31.1"
description = "Google Cloud Build API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.12.4,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-compute"
version = "1.28.0"
description = "Google Cloud Compute API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-container"
version = "2.56.1"
description = "Google Cloud Container API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-core"
version = "2.4.3"
description = "Google Cloud API client core library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = ">=1.31.6,<2.0.0 || >2.3.0,<3.0.0dev"
google-auth = ">=1.25.0,<3.0dev"

[package.extras]
grpc = ["grpcio (>=1.38.0,<2.0dev)", "grpcio-status (>=1.38.0,<2.0.dev0)"]

[[package]]
name = "google-cloud-datacatalog"
version = "3.26.0"
description = "Google Cloud Datacatalog API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-dataflow-client"
version = "0.8.17"
description = "Google Cloud Dataflow Client API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-dataform"
version = "0.6.1"
description = "Google Cloud Dataform API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-dataplex"
version = "2.8.0"
description = "Google Cloud Dataplex API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-dataproc"
version = "5.18.1"
description = "Google Cloud Dataproc API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-dataproc-metastore"
version = "1.18.2"
description = "Google Cloud Dataproc Metastore API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-dlp"
version = "3.29.0"
description = "Google Cloud Dlp API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-kms"
version = "3.4.1"
description = "Google Cloud Kms API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-language"
version = "2.17.1"
description = "Google Cloud Language API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-logging"
version = "3.11.4"
description = "Stackdriver Logging API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0dev", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0dev"
google-cloud-appengine-logging = ">=0.1.3,<2.0.0dev"
google-cloud-audit-log = ">=0.2.4,<1.0.0dev"
google-cloud-core = ">=2.0.0,<3.0.0dev"
grpc-google-iam-v1 = ">=0.12.4,<1.0.0dev"
opentelemetry-api = ">=1.9.0"
proto-plus = ">=1.22.0,<2.0.0dev"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<6.0.0dev"

[[package]]
name = "google-cloud-managedkafka"
version = "0.1.9"
description = "Google Cloud Managedkafka API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-memcache"
version = "1.12.1"
description = "Google Cloud Memcache API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-monitoring"
version = "2.27.1"
description = "Google Cloud Monitoring API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[package.extras]
pandas = ["pandas (>=0.23.2)"]

[[package]]
name = "google-cloud-orchestration-airflow"
version = "1.17.2"
description = "Google Cloud Orchestration Airflow API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-os-login"
version = "2.17.1"
description = "Google Cloud Os Login API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-pubsub"
version = "2.29.0"
description = "Google Cloud Pub/Sub API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.0,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<3.0.0"
grpc-google-iam-v1 = ">=0.12.4,<1.0.0"
grpcio = ">=1.51.3,<2.0.0"
grpcio-status = ">=1.33.2"
opentelemetry-api = {version = ">=1.27.0", markers = "python_version >= \"3.8\""}
opentelemetry-sdk = {version = ">=1.27.0", markers = "python_version >= \"3.8\""}
proto-plus = ">=1.22.0,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[package.extras]
libcst = ["libcst (>=0.3.10)"]

[[package]]
name = "google-cloud-redis"
version = "2.18.1"
description = "Google Cloud Redis API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-resource-manager"
version = "1.14.2"
description = "Google Cloud Resource Manager API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-run"
version = "0.10.17"
description = "Google Cloud Run API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-secret-manager"
version = "2.23.2"
description = "Google Cloud Secret Manager API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-spanner"
version = "3.53.0"
description = "Google Cloud Spanner API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.0,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-cloud-core = ">=1.4.4,<3.0.0"
grpc-google-iam-v1 = ">=0.12.4,<1.0.0"
grpc-interceptor = ">=0.15.4"
proto-plus = ">=1.22.0,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"
sqlparse = ">=0.4.4"

[package.extras]
libcst = ["libcst (>=0.2.5)"]
tracing = ["opentelemetry-api (>=1.22.0)", "opentelemetry-sdk (>=1.22.0)", "opentelemetry-semantic-conventions (>=0.43b0)", "opentelemetry-resourcedetector-gcp (>=1.8.0a0)", "google-cloud-monitoring (>=2.16.0)", "mmh3 (>=4.1.0)"]

[[package]]
name = "google-cloud-speech"
version = "2.31.1"
description = "Google Cloud Speech API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-storage"
version = "2.19.0"
description = "Google Cloud Storage API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = ">=2.15.0,<3.0.0dev"
google-auth = ">=2.26.1,<3.0dev"
google-cloud-core = ">=2.3.0,<3.0dev"
google-crc32c = ">=1.0,<2.0dev"
google-resumable-media = ">=2.7.2"
requests = ">=2.18.0,<3.0.0dev"

[package.extras]
protobuf = ["protobuf (<6.0.0dev)"]
tracing = ["opentelemetry-api (>=1.1.0)"]

[[package]]
name = "google-cloud-storage-transfer"
version = "1.16.1"
description = "Google Cloud Storage Transfer API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-tasks"
version = "2.19.2"
description = "Google Cloud Tasks API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-texttospeech"
version = "2.25.1"
description = "Google Cloud Texttospeech API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-translate"
version = "3.20.2"
description = "Google Cloud Translate API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
google-cloud-core = ">=1.4.4,<3.0.0"
grpc-google-iam-v1 = ">=0.14.0,<1.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-videointelligence"
version = "2.16.1"
description = "Google Cloud Videointelligence API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-vision"
version = "3.10.1"
description = "Google Cloud Vision API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-cloud-workflows"
version = "1.18.0"
description = "Google Cloud Workflows API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-api-core = {version = ">=1.34.1,<2.0.0 || >=2.11.0,<3.0.0", extras = ["grpc"]}
google-auth = ">=2.14.1,<2.24.0 || >2.24.0,<2.25.0 || >2.25.0,<3.0.0"
proto-plus = ">=1.22.3,<2.0.0"
protobuf = ">=3.20.2,<4.21.0 || >4.21.0,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "google-crc32c"
version = "1.7.0"
description = "A python wrapper of the C library 'Google CRC32C'"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
testing = ["pytest"]

[[package]]
name = "google-re2"
version = "1.1.20240702"
description = "RE2 Python bindings"
category = "main"
optional = false
python-versions = "~=3.8"

[[package]]
name = "google-resumable-media"
version = "2.7.2"
description = "Utilities for Google Media Downloads and Resumable Uploads"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
google-crc32c = ">=1.0,<2.0dev"

[package.extras]
aiohttp = ["aiohttp (>=3.6.2,<4.0.0dev)", "google-auth (>=1.22.0,<2.0dev)"]
requests = ["requests (>=2.18.0,<3.0.0dev)"]

[[package]]
name = "googleapis-common-protos"
version = "1.69.2"
description = "Common protobufs used in Google APIs"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
grpcio = {version = ">=1.44.0,<2.0.0", optional = true, markers = "extra == \"grpc\""}
protobuf = ">=3.20.2,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[package.extras]
grpc = ["grpcio (>=1.44.0,<2.0.0)"]

[[package]]
name = "greenlet"
version = "3.1.1"
description = "Lightweight in-process concurrent programming"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
docs = ["sphinx", "furo"]
test = ["objgraph", "psutil"]

[[package]]
name = "grpc-google-iam-v1"
version = "0.14.2"
description = "IAM API client library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
googleapis-common-protos = {version = ">=1.56.0,<2.0.0", extras = ["grpc"]}
grpcio = ">=1.44.0,<2.0.0"
protobuf = ">=3.20.2,<4.21.1 || >4.21.1,<4.21.2 || >4.21.2,<4.21.3 || >4.21.3,<4.21.4 || >4.21.4,<4.21.5 || >4.21.5,<7.0.0"

[[package]]
name = "grpc-interceptor"
version = "0.15.4"
description = "Simplifies gRPC interceptors"
category = "main"
optional = false
python-versions = ">=3.7,<4.0"

[package.dependencies]
grpcio = ">=1.49.1,<2.0.0"

[package.extras]
testing = ["protobuf (>=4.21.9)"]

[[package]]
name = "grpcio"
version = "1.71.0"
description = "HTTP/2-based RPC framework"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
protobuf = ["grpcio-tools (>=1.71.0)"]

[[package]]
name = "grpcio-gcp"
version = "0.2.2"
description = "gRPC extensions for Google Cloud Platform"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
grpcio = ">=1.12.0"

[[package]]
name = "grpcio-status"
version = "1.71.0"
description = "Status proto mapping for gRPC"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
googleapis-common-protos = ">=1.5.5"
grpcio = ">=1.71.0"
protobuf = ">=5.26.1,<6.0dev"

[[package]]
name = "gunicorn"
version = "23.0.0"
description = "WSGI HTTP Server for UNIX"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
packaging = "*"

[package.extras]
eventlet = ["eventlet (>=0.24.1,!=0.36.0)"]
gevent = ["gevent (>=1.4.0)"]
setproctitle = ["setproctitle"]
testing = ["gevent", "eventlet", "coverage", "pytest", "pytest-cov"]
tornado = ["tornado (>=0.2)"]

[[package]]
name = "h11"
version = "0.14.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "httpcore"
version = "1.0.7"
description = "A minimal low-level HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = "*"
h11 = ">=0.13,<0.15"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httplib2"
version = "0.22.0"
description = "A comprehensive HTTP client library."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
pyparsing = {version = ">=2.4.2,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.0.2 || >3.0.2,<3.0.3 || >3.0.3,<4", markers = "python_version > \"3.0\""}

[[package]]
name = "httpx"
version = "0.28.1"
description = "The next generation HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = ">=1.0.0,<2.0.0"
idna = "*"

[package.extras]
brotli = ["brotli", "brotlicffi"]
cli = ["click (>=8.0.0,<9.0.0)", "pygments (>=2.0.0,<3.0.0)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
all = ["ruff (>=0.6.2)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "flake8 (>=7.1.1)"]

[[package]]
name = "immutabledict"
version = "4.2.1"
description = "Immutable wrapper around dictionaries (a fork of frozendict)"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "importlib-metadata"
version = "8.6.1"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
zipp = ">=3.20"

[package.extras]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "importlib_resources (>=1.3)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "jaraco.test (>=5.4)"]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
perf = ["ipython"]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1)"]
cover = ["pytest-cov"]
enabler = ["pytest-enabler (>=2.2)"]
type = ["pytest-mypy"]

[[package]]
name = "inflection"
version = "0.5.1"
description = "A port of Ruby on Rails inflector to Python"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "itsdangerous"
version = "2.2.0"
description = "Safely pass data to untrusted environments and back."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "jinja2"
version = "3.1.6"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "jmespath"
version = "1.0.1"
description = "JSON Matching Expressions"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "joblib"
version = "1.4.2"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "json-merge-patch"
version = "0.2"
description = "JSON Merge Patch library (https://tools.ietf.org/html/rfc7386)"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "jsonschema"
version = "4.23.0"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
attrs = ">=22.2.0"
jsonschema-specifications = ">=2023.03.6"
referencing = ">=0.28.4"
rpds-py = ">=0.7.1"

[package.extras]
format = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3987", "uri-template", "webcolors (>=1.11)"]
format-nongpl = ["fqdn", "idna", "isoduration", "jsonpointer (>1.13)", "rfc3339-validator", "rfc3986-validator (>0.1.0)", "uri-template", "webcolors (>=24.6.0)"]

[[package]]
name = "jsonschema-specifications"
version = "2024.10.1"
description = "The JSON Schema meta-schemas and vocabularies, exposed as a Registry"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
referencing = ">=0.31.0"

[[package]]
name = "lazy-object-proxy"
version = "1.10.0"
description = "A fast and thorough lazy object proxy."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "limits"
version = "4.4.1"
description = "Rate limiting utilities"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
deprecated = ">=1.2"
packaging = ">=21,<25"
typing_extensions = "*"

[package.extras]
redis = ["redis (>3,!=4.5.2,!=4.5.3,<6.0.0)"]
rediscluster = ["redis (>=4.2.0,!=4.5.2,!=4.5.3)"]
memcached = ["pymemcache (>3,<5.0.0)"]
mongodb = ["pymongo (>4.1,<5)"]
etcd = ["etcd3"]
valkey = ["valkey (>=6)"]
async-redis = ["coredis (>=3.4.0,<5)"]
async-memcached = ["emcache (>=0.6.1)", "emcache (>=1)"]
async-mongodb = ["motor (>=3,<4)"]
async-etcd = ["aetcd"]
async-valkey = ["valkey (>=6)"]
all = ["redis (>3,!=4.5.2,!=4.5.3,<6.0.0)", "redis (>=4.2.0,!=4.5.2,!=4.5.3)", "pymemcache (>3,<5.0.0)", "pymongo (>4.1,<5)", "etcd3", "valkey (>=6)", "coredis (>=3.4.0,<5)", "emcache (>=0.6.1)", "emcache (>=1)", "motor (>=3,<4)", "aetcd", "valkey (>=6)"]

[[package]]
name = "linkify-it-py"
version = "2.0.3"
description = "Links recognition library with FULL unicode support."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
uc-micro-py = "*"

[package.extras]
benchmark = ["pytest", "pytest-benchmark"]
dev = ["pre-commit", "isort", "flake8", "black", "pyproject-flake8"]
doc = ["sphinx", "sphinx-book-theme", "myst-parser"]
test = ["pytest", "coverage", "pytest-cov"]

[[package]]
name = "lockfile"
version = "0.12.2"
description = "Platform-independent file locking module"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "looker-sdk"
version = "25.4.0"
description = "Looker REST API"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
attrs = {version = ">=20.1.0", markers = "python_version >= \"3.7\""}
cattrs = {version = ">=1.3", markers = "python_version >= \"3.7\""}
requests = ">=2.22"
typing-extensions = ">=4.1.1"

[[package]]
name = "mako"
version = "1.3.9"
description = "A super-fast templating language that borrows the best ideas from the existing templating languages."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
MarkupSafe = ">=0.9.2"

[package.extras]
testing = ["pytest"]
babel = ["babel"]
lingua = ["lingua"]

[[package]]
name = "markdown-it-py"
version = "3.0.0"
description = "Python port of markdown-it. Markdown parsing, done right!"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
mdurl = ">=0.1,<1.0"

[package.extras]
benchmarking = ["psutil", "pytest", "pytest-benchmark"]
code_style = ["pre-commit (>=3.0,<4.0)"]
compare = ["commonmark (>=0.9,<1.0)", "markdown (>=3.4,<4.0)", "mistletoe (>=1.0,<2.0)", "mistune (>=2.0,<3.0)", "panflute (>=2.3,<3.0)"]
linkify = ["linkify-it-py (>=1,<3)"]
plugins = ["mdit-py-plugins"]
profiling = ["gprof2dot"]
rtd = ["mdit-py-plugins", "myst-parser", "pyyaml", "sphinx", "sphinx-copybutton", "sphinx-design", "sphinx-book-theme", "jupyter-sphinx"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "markupsafe"
version = "3.0.2"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "marshmallow"
version = "3.26.1"
description = "A lightweight library for converting complex datatypes to and from native Python datatypes."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
packaging = ">=17.0"

[package.extras]
dev = ["marshmallow", "tox", "pre-commit (>=3.5,<5.0)"]
docs = ["autodocsumm (==0.2.14)", "furo (==2024.8.6)", "sphinx-copybutton (==0.5.2)", "sphinx-issues (==5.0.0)", "sphinx (==8.1.3)", "sphinxext-opengraph (==0.9.1)"]
tests = ["pytest", "simplejson"]

[[package]]
name = "marshmallow-oneofschema"
version = "3.1.1"
description = "marshmallow multiplexing schema"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
marshmallow = ">=3.0.0,<4.0.0"

[package.extras]
dev = ["marshmallow-oneofschema", "tox", "pre-commit (>=3.5,<4.0)"]
tests = ["pytest"]

[[package]]
name = "marshmallow-sqlalchemy"
version = "0.28.2"
description = "SQLAlchemy integration with the marshmallow (de)serialization library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
marshmallow = ">=3.0.0"
packaging = ">=21.3"
SQLAlchemy = ">=1.3.0,<2.0"

[package.extras]
dev = ["pytest", "pytest-lazy-fixture (>=0.6.2)", "flake8 (==6.0.0)", "flake8-bugbear (==23.2.13)", "pre-commit (==3.1.0)", "tox"]
docs = ["sphinx (==6.1.3)", "alabaster (==0.7.13)", "sphinx-issues (==3.0.1)"]
lint = ["flake8 (==6.0.0)", "flake8-bugbear (==23.2.13)", "pre-commit (==3.1.0)"]
tests = ["pytest", "pytest-lazy-fixture (>=0.6.2)"]

[[package]]
name = "mdit-py-plugins"
version = "0.4.2"
description = "Collection of plugins for markdown-it-py"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
markdown-it-py = ">=1.0.0,<4.0.0"

[package.extras]
code-style = ["pre-commit"]
rtd = ["myst-parser", "sphinx-book-theme"]
testing = ["coverage", "pytest", "pytest-cov", "pytest-regressions"]

[[package]]
name = "mdurl"
version = "0.1.2"
description = "Markdown URL utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "methodtools"
version = "0.4.7"
description = "Expand standard functools to methods"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
wirerope = ">=0.4.7"

[package.extras]
doc = ["sphinx"]
test = ["pytest (>=4.6.7)", "pytest-cov (>=2.6.1)", "functools32 (>=3.2.3-2)"]

[[package]]
name = "more-itertools"
version = "10.6.0"
description = "More routines for operating on iterables, beyond itertools"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "multidict"
version = "6.2.0"
description = "multidict implementation"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
typing-extensions = {version = ">=4.1.0", markers = "python_version < \"3.11\""}

[[package]]
name = "numpy"
version = "1.26.4"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "oauthlib"
version = "3.2.2"
description = "A generic, spec-compliant, thorough implementation of the OAuth request-signing logic"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
rsa = ["cryptography (>=3.0.0)"]
signals = ["blinker (>=1.4.0)"]
signedtoken = ["cryptography (>=3.0.0)", "pyjwt (>=2.0.0,<3)"]

[[package]]
name = "opentelemetry-api"
version = "1.31.1"
description = "OpenTelemetry Python API"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
deprecated = ">=1.2.6"
importlib-metadata = ">=6.0,<8.7.0"

[[package]]
name = "opentelemetry-exporter-otlp"
version = "1.31.1"
description = "OpenTelemetry Collector Exporters"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
opentelemetry-exporter-otlp-proto-grpc = "1.31.1"
opentelemetry-exporter-otlp-proto-http = "1.31.1"

[[package]]
name = "opentelemetry-exporter-otlp-proto-common"
version = "1.31.1"
description = "OpenTelemetry Protobuf encoding"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
opentelemetry-proto = "1.31.1"

[[package]]
name = "opentelemetry-exporter-otlp-proto-grpc"
version = "1.31.1"
description = "OpenTelemetry Collector Protobuf over gRPC Exporter"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
deprecated = ">=1.2.6"
googleapis-common-protos = ">=1.52,<2.0"
grpcio = {version = ">=1.63.2,<2.0.0", markers = "python_version < \"3.13\""}
opentelemetry-api = ">=1.15,<2.0"
opentelemetry-exporter-otlp-proto-common = "1.31.1"
opentelemetry-proto = "1.31.1"
opentelemetry-sdk = ">=1.31.1,<1.32.0"

[[package]]
name = "opentelemetry-exporter-otlp-proto-http"
version = "1.31.1"
description = "OpenTelemetry Collector Protobuf over HTTP Exporter"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
deprecated = ">=1.2.6"
googleapis-common-protos = ">=1.52,<2.0"
opentelemetry-api = ">=1.15,<2.0"
opentelemetry-exporter-otlp-proto-common = "1.31.1"
opentelemetry-proto = "1.31.1"
opentelemetry-sdk = ">=1.31.1,<1.32.0"
requests = ">=2.7,<3.0"

[[package]]
name = "opentelemetry-proto"
version = "1.31.1"
description = "OpenTelemetry Python Proto"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
protobuf = ">=5.0,<6.0"

[[package]]
name = "opentelemetry-sdk"
version = "1.31.1"
description = "OpenTelemetry Python SDK"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
opentelemetry-api = "1.31.1"
opentelemetry-semantic-conventions = "0.52b1"
typing-extensions = ">=3.7.4"

[[package]]
name = "opentelemetry-semantic-conventions"
version = "0.52b1"
description = "OpenTelemetry Semantic Conventions"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
deprecated = ">=1.2.6"
opentelemetry-api = "1.31.1"

[[package]]
name = "ordered-set"
version = "4.1.0"
description = "An OrderedSet is a custom MutableSet that remembers its order, so that every"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
dev = ["pytest", "black", "mypy"]

[[package]]
name = "packaging"
version = "24.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pandas"
version = "2.1.4"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
numpy = {version = ">=1.22.4,<2", markers = "python_version < \"3.11\""}
python-dateutil = ">=2.8.2"
pytz = ">=2020.1"
tzdata = ">=2022.1"

[package.extras]
test = ["hypothesis (>=6.46.1)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)"]
performance = ["bottleneck (>=1.3.4)", "numba (>=0.55.2)", "numexpr (>=2.8.0)"]
computation = ["scipy (>=1.8.1)", "xarray (>=2022.03.0)"]
fss = ["fsspec (>=2022.05.0)"]
aws = ["s3fs (>=2022.05.0)"]
gcp = ["gcsfs (>=2022.05.0)", "pandas-gbq (>=0.17.5)"]
excel = ["odfpy (>=1.4.1)", "openpyxl (>=3.0.10)", "pyxlsb (>=1.0.9)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.3)"]
parquet = ["pyarrow (>=7.0.0)"]
feather = ["pyarrow (>=7.0.0)"]
hdf5 = ["tables (>=3.7.0)"]
spss = ["pyreadstat (>=1.1.5)"]
postgresql = ["SQLAlchemy (>=1.4.36)", "psycopg2 (>=2.9.3)"]
mysql = ["SQLAlchemy (>=1.4.36)", "pymysql (>=1.0.2)"]
sql-other = ["SQLAlchemy (>=1.4.36)"]
html = ["beautifulsoup4 (>=4.11.1)", "html5lib (>=1.1)", "lxml (>=4.8.0)"]
xml = ["lxml (>=4.8.0)"]
plot = ["matplotlib (>=3.6.1)"]
output-formatting = ["jinja2 (>=3.1.2)", "tabulate (>=0.8.10)"]
clipboard = ["PyQt5 (>=5.15.6)", "qtpy (>=2.2.0)"]
compression = ["zstandard (>=0.17.0)"]
consortium-standard = ["dataframe-api-compat (>=0.1.7)"]
all = ["beautifulsoup4 (>=4.11.1)", "bottleneck (>=1.3.4)", "dataframe-api-compat (>=0.1.7)", "fastparquet (>=0.8.1)", "fsspec (>=2022.05.0)", "gcsfs (>=2022.05.0)", "html5lib (>=1.1)", "hypothesis (>=6.46.1)", "jinja2 (>=3.1.2)", "lxml (>=4.8.0)", "matplotlib (>=3.6.1)", "numba (>=0.55.2)", "numexpr (>=2.8.0)", "odfpy (>=1.4.1)", "openpyxl (>=3.0.10)", "pandas-gbq (>=0.17.5)", "psycopg2 (>=2.9.3)", "pyarrow (>=7.0.0)", "pymysql (>=1.0.2)", "PyQt5 (>=5.15.6)", "pyreadstat (>=1.1.5)", "pytest (>=7.3.2)", "pytest-xdist (>=2.2.0)", "pyxlsb (>=1.0.9)", "qtpy (>=2.2.0)", "scipy (>=1.8.1)", "s3fs (>=2022.05.0)", "SQLAlchemy (>=1.4.36)", "tables (>=3.7.0)", "tabulate (>=0.8.10)", "xarray (>=2022.03.0)", "xlrd (>=2.0.1)", "xlsxwriter (>=3.0.3)", "zstandard (>=0.17.0)"]

[[package]]
name = "pandas-gbq"
version = "0.28.0"
description = "Google BigQuery connector for pandas"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
db-dtypes = ">=1.0.4,<2.0.0"
google-api-core = ">=2.10.2,<3.0.0dev"
google-auth = ">=2.13.0"
google-auth-oauthlib = ">=0.7.0"
google-cloud-bigquery = ">=3.4.2,<4.0.0dev"
numpy = ">=1.18.1"
packaging = ">=22.0.0"
pandas = ">=1.1.4"
pyarrow = ">=4.0.0"
pydata-google-auth = ">=1.5.0"

[package.extras]
bqstorage = ["google-cloud-bigquery-storage (>=2.16.2,<3.0.0dev)"]
geopandas = ["geopandas (>=0.9.0)", "Shapely (>=1.8.4)"]
tqdm = ["tqdm (>=4.23.0)"]

[[package]]
name = "pathspec"
version = "0.12.1"
description = "Utility library for gitignore style pattern matching of file paths."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pendulum"
version = "3.0.0"
description = "Python datetimes made easy"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
python-dateutil = ">=2.6"
tzdata = ">=2020.1"

[package.extras]
test = ["time-machine (>=2.6.0)"]

[[package]]
name = "pluggy"
version = "1.5.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["pre-commit", "tox"]
testing = ["pytest", "pytest-benchmark"]

[[package]]
name = "prison"
version = "0.2.1"
description = "Rison encoder/decoder"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
dev = ["nose", "pipreqs", "twine"]

[[package]]
name = "propcache"
version = "0.3.0"
description = "Accelerated property cache"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "proto-plus"
version = "1.26.1"
description = "Beautiful, Pythonic protocol buffers"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
protobuf = ">=3.19.0,<7.0.0"

[package.extras]
testing = ["google-api-core (>=1.31.5)"]

[[package]]
name = "protobuf"
version = "5.29.4"
description = ""
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "psutil"
version = "7.0.0"
description = "Cross-platform lib for process and system monitoring in Python.  NOTE: the syntax of this script MUST be kept compatible with Python 2.7."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
dev = ["pytest", "pytest-xdist", "setuptools", "abi3audit", "black (==24.10.0)", "check-manifest", "coverage", "packaging", "pylint", "pyperf", "pypinfo", "pytest-cov", "requests", "rstcheck", "ruff", "sphinx", "sphinx-rtd-theme", "toml-sort", "twine", "virtualenv", "vulture", "wheel"]
test = ["pytest", "pytest-xdist", "setuptools"]

[[package]]
name = "py4j"
version = "0.10.9.7"
description = "Enables Python programs to dynamically access arbitrary Java objects"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyarrow"
version = "19.0.1"
description = "Python library for Apache Arrow"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
test = ["pytest", "hypothesis", "cffi", "pytz", "pandas"]

[[package]]
name = "pyasn1"
version = "0.6.1"
description = "Pure-Python implementation of ASN.1 types and DER/BER/CER codecs (X.208)"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyasn1-modules"
version = "0.4.1"
description = "A collection of ASN.1-based protocols modules"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pyasn1 = ">=0.4.6,<0.7.0"

[[package]]
name = "pycparser"
version = "2.22"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pydantic"
version = "2.10.6"
description = "Data validation using Python type hints"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.27.2"
typing-extensions = ">=4.12.2"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata"]

[[package]]
name = "pydantic-core"
version = "2.27.2"
description = "Core functionality for Pydantic validation and serialization"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "pydata-google-auth"
version = "1.9.1"
description = "PyData helpers for authenticating to Google APIs"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
google-auth = ">=1.25.0,<3.0dev"
google-auth-oauthlib = ">=0.4.0"

[[package]]
name = "pygments"
version = "2.19.1"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
windows-terminal = ["colorama (>=0.4.6)"]

[[package]]
name = "pyjwt"
version = "2.10.1"
description = "JSON Web Token implementation in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
crypto = ["cryptography (>=3.4.0)"]
dev = ["coverage[toml] (==5.0.4)", "cryptography (>=3.4.0)", "pre-commit", "pytest (>=6.0.0,<7.0.0)", "sphinx", "sphinx-rtd-theme", "zope.interface"]
docs = ["sphinx", "sphinx-rtd-theme", "zope.interface"]
tests = ["coverage[toml] (==5.0.4)", "pytest (>=6.0.0,<7.0.0)"]

[[package]]
name = "pyopenssl"
version = "25.0.0"
description = "Python wrapper module around the OpenSSL library"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cryptography = ">=41.0.5,<45"
typing-extensions = {version = ">=4.9", markers = "python_version < \"3.13\" and python_version >= \"3.8\""}

[package.extras]
test = ["pytest-rerunfailures", "pretend", "pytest (>=3.0.1)"]
docs = ["sphinx (!=5.2.0,!=5.2.0.post0,!=7.2.5)", "sphinx-rtd-theme"]

[[package]]
name = "pyparsing"
version = "3.2.1"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
diagrams = ["railroad-diagrams", "jinja2"]

[[package]]
name = "pyspark"
version = "3.5.5"
description = "Apache Spark Python API"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
py4j = "0.10.9.7"

[package.extras]
connect = ["googleapis-common-protos (>=1.56.4)", "grpcio-status (>=1.56.0)", "grpcio (>=1.56.0)", "numpy (>=1.15,<2)", "pandas (>=1.0.5)", "pyarrow (>=4.0.0)"]
ml = ["numpy (>=1.15,<2)"]
mllib = ["numpy (>=1.15,<2)"]
pandas_on_spark = ["numpy (>=1.15,<2)", "pandas (>=1.0.5)", "pyarrow (>=4.0.0)"]
sql = ["numpy (>=1.15,<2)", "pandas (>=1.0.5)", "pyarrow (>=4.0.0)"]

[[package]]
name = "python-daemon"
version = "3.1.2"
description = "Library to implement a well-behaved Unix daemon process."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
lockfile = ">=0.10"

[package.extras]
static-analysis = ["pip-check", "pycodestyle (>=2.12,<3.0)", "pydocstyle (>=6.3,<7.0)", "pyupgrade (>=3.17,<4.0)", "isort (>=5.13,<6.0)"]
build = ["python-daemon", "wheel", "build", "docutils", "changelog-chug"]
test = ["python-daemon", "testtools", "testscenarios (>=0.4)", "coverage"]
dist = ["python-daemon", "twine"]
devel = ["python-daemon"]

[[package]]
name = "python-dateutil"
version = "2.9.0.post0"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "python-nvd3"
version = "0.16.0"
description = "Python NVD3 - Chart Library for d3.js"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
Jinja2 = ">=2.8"
python-slugify = ">=1.2.5"

[[package]]
name = "python-slugify"
version = "8.0.4"
description = "A Python slugify application that also handles Unicode"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
text-unidecode = ">=1.3"

[package.extras]
unidecode = ["Unidecode (>=1.1.1)"]

[[package]]
name = "pytz"
version = "2025.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pyyaml"
version = "6.0.2"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "referencing"
version = "0.36.2"
description = "JSON Referencing + Python"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
attrs = ">=22.2.0"
rpds-py = ">=0.7.0"
typing-extensions = {version = ">=4.4.0", markers = "python_version < \"3.13\""}

[[package]]
name = "requests"
version = "2.32.3"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "requests-oauthlib"
version = "2.0.0"
description = "OAuthlib authentication support for Requests."
category = "main"
optional = false
python-versions = ">=3.4"

[package.dependencies]
oauthlib = ">=3.0.0"
requests = ">=2.0.0"

[package.extras]
rsa = ["oauthlib[signedtoken] (>=3.0.0)"]

[[package]]
name = "requests-toolbelt"
version = "1.0.0"
description = "A utility belt for advanced users of python-requests"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.dependencies]
requests = ">=2.0.1,<3.0.0"

[[package]]
name = "rfc3339-validator"
version = "0.1.4"
description = "A pure python RFC3339 validator"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[package.dependencies]
six = "*"

[[package]]
name = "rich"
version = "13.9.4"
description = "Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal"
category = "main"
optional = false
python-versions = ">=3.8.0"

[package.dependencies]
markdown-it-py = ">=2.2.0"
pygments = ">=2.13.0,<3.0.0"
typing-extensions = {version = ">=4.0.0,<5.0", markers = "python_version < \"3.11\""}

[package.extras]
jupyter = ["ipywidgets (>=7.5.1,<9)"]

[[package]]
name = "rich-argparse"
version = "1.7.0"
description = "Rich help formatters for argparse and optparse"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
rich = ">=11.0.0"

[[package]]
name = "rpds-py"
version = "0.23.1"
description = "Python bindings to Rust's persistent data structures (rpds)"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "rsa"
version = "4.9"
description = "Pure-Python RSA implementation"
category = "main"
optional = false
python-versions = ">=3.6,<4"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
name = "scikit-learn"
version = "1.5.2"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
joblib = ">=1.2.0"
numpy = ">=1.19.5"
scipy = ">=1.6.0"
threadpoolctl = ">=3.1.0"

[package.extras]
build = ["numpy (>=1.19.5)", "scipy (>=1.6.0)", "cython (>=3.0.10)", "meson-python (>=0.16.0)"]
install = ["numpy (>=1.19.5)", "scipy (>=1.6.0)", "joblib (>=1.2.0)", "threadpoolctl (>=3.1.0)"]
benchmark = ["matplotlib (>=3.3.4)", "pandas (>=1.1.5)", "memory_profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.3.4)", "scikit-image (>=0.17.2)", "pandas (>=1.1.5)", "seaborn (>=0.9.0)", "memory_profiler (>=0.57.0)", "sphinx (>=7.3.7)", "sphinx-copybutton (>=0.5.2)", "sphinx-gallery (>=0.16.0)", "numpydoc (>=1.2.0)", "Pillow (>=7.1.2)", "pooch (>=1.6.0)", "sphinx-prompt (>=1.4.0)", "sphinxext-opengraph (>=0.9.1)", "plotly (>=5.14.0)", "polars (>=0.20.30)", "sphinx-design (>=0.5.0)", "sphinx-design (>=0.6.0)", "sphinxcontrib-sass (>=0.3.4)", "pydata-sphinx-theme (>=0.15.3)", "sphinx-remove-toctrees (>=1.0.0.post1)"]
examples = ["matplotlib (>=3.3.4)", "scikit-image (>=0.17.2)", "pandas (>=1.1.5)", "seaborn (>=0.9.0)", "pooch (>=1.6.0)", "plotly (>=5.14.0)"]
tests = ["matplotlib (>=3.3.4)", "scikit-image (>=0.17.2)", "pandas (>=1.1.5)", "pytest (>=7.1.2)", "pytest-cov (>=2.9.0)", "ruff (>=0.2.1)", "black (>=24.3.0)", "mypy (>=1.9)", "pyamg (>=4.0.0)", "polars (>=0.20.30)", "pyarrow (>=12.0.0)", "numpydoc (>=1.2.0)", "pooch (>=1.6.0)"]
maintenance = ["conda-lock (==2.5.6)"]

[[package]]
name = "scikit-learn"
version = "1.6.1"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
joblib = ">=1.2.0"
numpy = ">=1.19.5"
scipy = ">=1.6.0"
threadpoolctl = ">=3.1.0"

[package.extras]
build = ["numpy (>=1.19.5)", "scipy (>=1.6.0)", "cython (>=3.0.10)", "meson-python (>=0.16.0)"]
install = ["numpy (>=1.19.5)", "scipy (>=1.6.0)", "joblib (>=1.2.0)", "threadpoolctl (>=3.1.0)"]
benchmark = ["matplotlib (>=3.3.4)", "pandas (>=1.1.5)", "memory_profiler (>=0.57.0)"]
docs = ["matplotlib (>=3.3.4)", "scikit-image (>=0.17.2)", "pandas (>=1.1.5)", "seaborn (>=0.9.0)", "memory_profiler (>=0.57.0)", "sphinx (>=7.3.7)", "sphinx-copybutton (>=0.5.2)", "sphinx-gallery (>=0.17.1)", "numpydoc (>=1.2.0)", "Pillow (>=7.1.2)", "pooch (>=1.6.0)", "sphinx-prompt (>=1.4.0)", "sphinxext-opengraph (>=0.9.1)", "plotly (>=5.14.0)", "polars (>=0.20.30)", "sphinx-design (>=0.5.0)", "sphinx-design (>=0.6.0)", "sphinxcontrib-sass (>=0.3.4)", "pydata-sphinx-theme (>=0.15.3)", "sphinx-remove-toctrees (>=1.0.0.post1)", "towncrier (>=24.8.0)"]
examples = ["matplotlib (>=3.3.4)", "scikit-image (>=0.17.2)", "pandas (>=1.1.5)", "seaborn (>=0.9.0)", "pooch (>=1.6.0)", "plotly (>=5.14.0)"]
tests = ["matplotlib (>=3.3.4)", "scikit-image (>=0.17.2)", "pandas (>=1.1.5)", "pytest (>=7.1.2)", "pytest-cov (>=2.9.0)", "ruff (>=0.5.1)", "black (>=24.3.0)", "mypy (>=1.9)", "pyamg (>=4.0.0)", "polars (>=0.20.30)", "pyarrow (>=12.0.0)", "numpydoc (>=1.2.0)", "pooch (>=1.6.0)"]
maintenance = ["conda-lock (==2.5.6)"]

[[package]]
name = "scipy"
version = "1.15.2"
description = "Fundamental algorithms for scientific computing in Python"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
numpy = ">=1.23.5,<2.5"

[package.extras]
test = ["pytest", "pytest-cov", "pytest-timeout", "pytest-xdist", "asv", "mpmath", "gmpy2", "threadpoolctl", "scikit-umfpack", "pooch", "hypothesis (>=6.30)", "array-api-strict (>=2.0,<2.1.1)", "cython", "meson", "ninja"]
doc = ["sphinx (>=5.0.0,<8.0.0)", "intersphinx-registry", "pydata-sphinx-theme (>=0.15.2)", "sphinx-copybutton", "sphinx-design (>=0.4.0)", "matplotlib (>=3.5)", "numpydoc", "jupytext", "myst-nb", "pooch", "jupyterlite-sphinx (>=0.16.5)", "jupyterlite-pyodide-kernel"]
dev = ["mypy (==1.10.0)", "typing-extensions", "types-psutil", "pycodestyle", "ruff (>=0.0.292)", "cython-lint (>=0.12.2)", "rich-click", "doit (>=0.36.0)", "pydevtool"]

[[package]]
name = "setproctitle"
version = "1.3.5"
description = "A Python module to customize the process title"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
test = ["pytest"]

[[package]]
name = "shapely"
version = "2.0.7"
description = "Manipulation and analysis of geometric objects"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
numpy = ">=1.14,<3"

[package.extras]
test = ["pytest", "pytest-cov"]
docs = ["numpydoc (>=1.1.0,<1.2.0)", "matplotlib", "sphinx", "sphinx-book-theme", "sphinx-remove-toctrees"]

[[package]]
name = "six"
version = "1.17.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "soupsieve"
version = "2.6"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "sqlalchemy"
version = "1.4.54"
description = "Database Abstraction Library"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7"

[package.dependencies]
greenlet = {version = "!=0.4.17", markers = "python_version >= \"3\" and (platform_machine == \"aarch64\" or platform_machine == \"ppc64le\" or platform_machine == \"x86_64\" or platform_machine == \"amd64\" or platform_machine == \"AMD64\" or platform_machine == \"win32\" or platform_machine == \"WIN32\")"}

[package.extras]
asyncio = ["greenlet (!=0.4.17)"]
mypy = ["mypy (>=0.910)", "sqlalchemy2-stubs"]
mssql = ["pyodbc"]
mssql-pymssql = ["pymssql", "pymssql"]
mssql-pyodbc = ["pyodbc", "pyodbc"]
mysql = ["mysqlclient (>=1.4.0,<2)", "mysqlclient (>=1.4.0)"]
mysql-connector = ["mysql-connector-python", "mysql-connector-python"]
mariadb-connector = ["mariadb (>=1.0.1,!=1.1.2)", "mariadb (>=1.0.1,!=1.1.2)"]
oracle = ["cx_oracle (>=7,<8)", "cx_oracle (>=7)"]
postgresql = ["psycopg2 (>=2.7)"]
postgresql-pg8000 = ["pg8000 (>=1.16.6,!=1.29.0)", "pg8000 (>=1.16.6,!=1.29.0)"]
postgresql-asyncpg = ["greenlet (!=0.4.17)", "asyncpg", "greenlet (!=0.4.17)", "asyncpg"]
pymysql = ["pymysql", "pymysql (<1)"]
aiomysql = ["greenlet (!=0.4.17)", "aiomysql (>=0.2.0)"]
asyncmy = ["greenlet (!=0.4.17)", "asyncmy (>=0.2.3,!=0.2.4)"]
aiosqlite = ["greenlet (!=0.4.17)", "aiosqlite", "typing_extensions (!=3.10.0.1)"]
sqlcipher = ["sqlcipher3-binary"]
postgresql-psycopg2binary = ["psycopg2-binary"]
postgresql-psycopg2cffi = ["psycopg2cffi"]

[[package]]
name = "sqlalchemy-bigquery"
version = "1.13.0"
description = "SQLAlchemy dialect for BigQuery"
category = "main"
optional = false
python-versions = "<3.13,>=3.8"

[package.dependencies]
google-api-core = ">=1.31.5,<2.0.0 || >2.3.0,<3.0.0"
google-auth = ">=1.25.0,<3.0.0"
google-cloud-bigquery = ">=3.3.6,<4.0.0"
packaging = "*"
sqlalchemy = ">=1.4.16,<3.0.0"

[package.extras]
alembic = ["alembic"]
all = ["grpcio (>=1.47.0,<2.0.0)", "geoalchemy2", "alembic", "shapely", "pytz", "packaging", "google-cloud-bigquery-storage (>=2.0.0,<3.0.0)", "pyarrow (>=3.0.0)", "grpcio (>=1.49.1,<2.0.0)"]
bqstorage = ["google-cloud-bigquery-storage (>=2.0.0,<3.0.0)", "grpcio (>=1.47.0,<2.0.0)", "pyarrow (>=3.0.0)", "grpcio (>=1.49.1,<2.0.0)"]
geography = ["geoalchemy2", "shapely"]
tests = ["packaging", "pytz"]

[[package]]
name = "sqlalchemy-jsonfield"
version = "1.0.2"
description = "SQLALchemy JSONField implementation for storing dicts at SQL"
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
sqlalchemy = "*"

[[package]]
name = "sqlalchemy-spanner"
version = "1.10.0"
description = "SQLAlchemy dialect integrated into Cloud Spanner database"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
alembic = "*"
google-cloud-spanner = ">=3.12.0"
sqlalchemy = ">=1.1.13"

[package.extras]
tracing = ["opentelemetry-api (>=1.1.0)", "opentelemetry-sdk (>=1.1.0)", "opentelemetry-instrumentation (>=0.20b0)"]

[[package]]
name = "sqlalchemy-utils"
version = "0.41.2"
description = "Various utility functions for SQLAlchemy."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
SQLAlchemy = ">=1.3"

[package.extras]
arrow = ["arrow (>=0.3.4)"]
babel = ["Babel (>=1.3)"]
color = ["colour (>=0.0.4)"]
encrypted = ["cryptography (>=0.6)"]
intervals = ["intervals (>=0.7.1)"]
password = ["passlib (>=1.6,<2.0)"]
pendulum = ["pendulum (>=2.0.5)"]
phone = ["phonenumbers (>=5.9.2)"]
test = ["pytest (==7.4.4)", "Pygments (>=1.2)", "Jinja2 (>=2.3)", "docutils (>=0.10)", "flexmock (>=0.9.7)", "psycopg (>=3.1.8)", "psycopg2 (>=2.5.1)", "psycopg2cffi (>=2.8.1)", "pg8000 (>=1.12.4)", "pytz (>=2014.2)", "python-dateutil (>=2.6)", "pymysql", "flake8 (>=2.4.0)", "isort (>=4.2.2)", "pyodbc", "backports.zoneinfo"]
test-all = ["Babel (>=1.3)", "Jinja2 (>=2.3)", "Pygments (>=1.2)", "arrow (>=0.3.4)", "colour (>=0.0.4)", "cryptography (>=0.6)", "docutils (>=0.10)", "flake8 (>=2.4.0)", "flexmock (>=0.9.7)", "furl (>=0.4.1)", "intervals (>=0.7.1)", "isort (>=4.2.2)", "passlib (>=1.6,<2.0)", "pendulum (>=2.0.5)", "pg8000 (>=1.12.4)", "phonenumbers (>=5.9.2)", "psycopg2 (>=2.5.1)", "psycopg2cffi (>=2.8.1)", "psycopg (>=3.1.8)", "pymysql", "pyodbc", "pytest (==7.4.4)", "python-dateutil", "python-dateutil (>=2.6)", "pytz (>=2014.2)"]
test_all = ["backports.zoneinfo"]
timezone = ["python-dateutil"]
url = ["furl (>=0.4.1)"]

[[package]]
name = "sqlparse"
version = "0.5.3"
description = "A non-validating SQL parser."
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
dev = ["build", "hatch"]
doc = ["sphinx"]

[[package]]
name = "tabulate"
version = "0.9.0"
description = "Pretty-print tabular data"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
widechars = ["wcwidth"]

[[package]]
name = "tenacity"
version = "9.0.0"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
doc = ["reno", "sphinx"]
test = ["pytest", "tornado (>=4.5)", "typeguard"]

[[package]]
name = "termcolor"
version = "2.5.0"
description = "ANSI color formatting for output in terminal"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "text-unidecode"
version = "1.3"
description = "The most basic Text::Unidecode port"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "threadpoolctl"
version = "3.6.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "tqdm"
version = "4.67.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["pytest (>=6)", "pytest-cov", "pytest-timeout", "pytest-asyncio (>=0.24)", "nbval"]
discord = ["requests"]
slack = ["slack-sdk"]
telegram = ["requests"]
notebook = ["ipywidgets (>=6)"]

[[package]]
name = "typing-extensions"
version = "4.12.2"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "tzdata"
version = "2025.1"
description = "Provider of IANA time zone data"
category = "main"
optional = false
python-versions = ">=2"

[[package]]
name = "uc-micro-py"
version = "1.0.3"
description = "Micro subset of unicode data files for linkify-it-py projects."
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest", "coverage", "pytest-cov"]

[[package]]
name = "universal-pathlib"
version = "0.2.6"
description = "pathlib api extended to use fsspec backends"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
fsspec = ">=2022.1.0,<2024.3.1 || >2024.3.1"

[package.extras]
tests = ["pytest (>=8)", "pytest-sugar (>=0.9.7)", "pytest-cov (>=4.1.0)", "pytest-mock (>=3.12.0)", "pylint (>=2.17.4)", "mypy (>=1.10.0)", "pytest-mypy-plugins (>=3.1.2)", "packaging"]
dev = ["adlfs", "aiohttp", "requests", "gcsfs", "s3fs", "moto", "webdav4", "paramiko", "wsgidav", "cheroot", "pydantic", "pydantic-settings", "smbprotocol", "typing-extensions"]

[[package]]
name = "uritemplate"
version = "4.1.1"
description = "Implementation of RFC 6570 URI Templates"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "urllib3"
version = "2.3.0"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
h2 = ["h2 (>=4,<5)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "werkzeug"
version = "2.2.3"
description = "The comprehensive WSGI web application library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.1.1"

[package.extras]
watchdog = ["watchdog"]

[[package]]
name = "wirerope"
version = "1.0.0"
description = "'Turn functions and methods into fully controllable objects'"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = ">=1.11.0"

[package.extras]
test = ["pytest (>=4.6.7)", "pytest-cov (>=2.6.1)", "pytest-checkdocs (>=1.2.5)", "pytest-checkdocs (>=2.9.0)"]
doc = ["sphinx"]

[[package]]
name = "wrapt"
version = "1.17.2"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "wtforms"
version = "3.2.1"
description = "Form validation and rendering for Python web development."
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
markupsafe = "*"

[package.extras]
email = ["email-validator"]

[[package]]
name = "yarl"
version = "1.18.3"
description = "Yet another URL library"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
idna = ">=2.0"
multidict = ">=4.0"
propcache = ">=0.2.0"

[[package]]
name = "zipp"
version = "3.21.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1)"]
cover = ["pytest-cov"]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "jaraco.test", "importlib-resources"]
type = ["pytest-mypy"]

[metadata]
lock-version = "1.1"
python-versions = "~3.10"
content-hash = "faf67dc3f3d3c44de41d69617be7c833115740a571902600757419864ea88fb7"

[metadata.files]
aiofiles = []
aiohappyeyeballs = []
aiohttp = []
aiosignal = []
aiosqlite = []
alembic = []
annotated-types = []
anyio = []
apache-airflow = []
apache-airflow-providers-apache-spark = []
apache-airflow-providers-common-compat = []
apache-airflow-providers-common-io = []
apache-airflow-providers-common-sql = []
apache-airflow-providers-fab = []
apache-airflow-providers-ftp = []
apache-airflow-providers-google = []
apache-airflow-providers-http = []
apache-airflow-providers-imap = []
apache-airflow-providers-smtp = []
apache-airflow-providers-sqlite = []
apispec = []
argcomplete = []
asgiref = []
async-timeout = []
attrs = []
babel = []
backoff = []
beautifulsoup4 = []
blinker = []
cachelib = []
cachetools = []
cattrs = []
certifi = []
cffi = []
chardet = []
charset-normalizer = []
click = []
clickclick = []
colorama = []
colorlog = []
configupdater = []
connexion = []
cron-descriptor = []
croniter = []
cryptography = []
db-dtypes = []
decorator = []
deprecated = []
dill = []
dnspython = []
docstring-parser = []
email-validator = []
exceptiongroup = []
flask = []
flask-appbuilder = []
flask-babel = []
flask-caching = []
flask-jwt-extended = []
flask-limiter = []
flask-login = []
flask-session = []
flask-sqlalchemy = []
flask-wtf = []
frozenlist = []
fsspec = []
gcloud-aio-auth = []
gcloud-aio-bigquery = []
gcloud-aio-storage = []
gcsfs = []
google-ads = []
google-analytics-admin = []
google-api-core = []
google-api-python-client = []
google-auth = []
google-auth-httplib2 = []
google-auth-oauthlib = []
google-cloud-aiplatform = []
google-cloud-alloydb = []
google-cloud-appengine-logging = []
google-cloud-audit-log = []
google-cloud-automl = []
google-cloud-batch = []
google-cloud-bigquery = []
google-cloud-bigquery-datatransfer = []
google-cloud-bigtable = []
google-cloud-build = []
google-cloud-compute = []
google-cloud-container = []
google-cloud-core = []
google-cloud-datacatalog = []
google-cloud-dataflow-client = []
google-cloud-dataform = []
google-cloud-dataplex = []
google-cloud-dataproc = []
google-cloud-dataproc-metastore = []
google-cloud-dlp = []
google-cloud-kms = []
google-cloud-language = []
google-cloud-logging = []
google-cloud-managedkafka = []
google-cloud-memcache = []
google-cloud-monitoring = []
google-cloud-orchestration-airflow = []
google-cloud-os-login = []
google-cloud-pubsub = []
google-cloud-redis = []
google-cloud-resource-manager = []
google-cloud-run = []
google-cloud-secret-manager = []
google-cloud-spanner = []
google-cloud-speech = []
google-cloud-storage = []
google-cloud-storage-transfer = []
google-cloud-tasks = []
google-cloud-texttospeech = []
google-cloud-translate = []
google-cloud-videointelligence = []
google-cloud-vision = []
google-cloud-workflows = []
google-crc32c = []
google-re2 = []
google-resumable-media = []
googleapis-common-protos = []
greenlet = []
grpc-google-iam-v1 = []
grpc-interceptor = []
grpcio = []
grpcio-gcp = []
grpcio-status = []
gunicorn = []
h11 = []
httpcore = []
httplib2 = []
httpx = []
idna = []
immutabledict = []
importlib-metadata = []
inflection = []
itsdangerous = []
jinja2 = []
jmespath = []
joblib = []
json-merge-patch = []
jsonschema = []
jsonschema-specifications = []
lazy-object-proxy = []
limits = []
linkify-it-py = []
lockfile = []
looker-sdk = []
mako = []
markdown-it-py = []
markupsafe = []
marshmallow = []
marshmallow-oneofschema = []
marshmallow-sqlalchemy = []
mdit-py-plugins = []
mdurl = []
methodtools = []
more-itertools = []
multidict = []
numpy = []
oauthlib = []
opentelemetry-api = []
opentelemetry-exporter-otlp = []
opentelemetry-exporter-otlp-proto-common = []
opentelemetry-exporter-otlp-proto-grpc = []
opentelemetry-exporter-otlp-proto-http = []
opentelemetry-proto = []
opentelemetry-sdk = []
opentelemetry-semantic-conventions = []
ordered-set = []
packaging = []
pandas = []
pandas-gbq = []
pathspec = []
pendulum = []
pluggy = []
prison = []
propcache = []
proto-plus = []
protobuf = []
psutil = []
py4j = []
pyarrow = []
pyasn1 = []
pyasn1-modules = []
pycparser = []
pydantic = []
pydantic-core = []
pydata-google-auth = []
pygments = []
pyjwt = []
pyopenssl = []
pyparsing = []
pyspark = []
python-daemon = []
python-dateutil = []
python-nvd3 = []
python-slugify = []
pytz = []
pyyaml = []
referencing = []
requests = []
requests-oauthlib = []
requests-toolbelt = []
rfc3339-validator = []
rich = []
rich-argparse = []
rpds-py = []
rsa = []
scikit-learn = []
scipy = []
setproctitle = []
shapely = []
six = []
sniffio = []
soupsieve = []
sqlalchemy = []
sqlalchemy-bigquery = []
sqlalchemy-jsonfield = []
sqlalchemy-spanner = []
sqlalchemy-utils = []
sqlparse = []
tabulate = []
tenacity = []
termcolor = []
text-unidecode = []
threadpoolctl = []
tqdm = []
typing-extensions = []
tzdata = []
uc-micro-py = []
universal-pathlib = []
uritemplate = []
urllib3 = []
werkzeug = []
wirerope = []
wrapt = []
wtforms = []
yarl = []
zipp = []
